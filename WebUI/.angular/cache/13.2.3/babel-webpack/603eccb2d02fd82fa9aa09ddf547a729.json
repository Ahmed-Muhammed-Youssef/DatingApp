{"ast":null,"code":"import _asyncToGenerator from \"E:\\\\Programming\\\\projects\\\\Dating App\\\\WebUI\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AccountService {\n  constructor(http) {\n    this.http = http;\n    this.token = '';\n  }\n\n  login(loginCred) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.http.post('/api/account/login', loginCred).subscribe(response => {\n        _this.token = response.token;\n      }, error => console.log(error));\n\n      return _this.token;\n    })();\n  }\n\n  register(model) {\n    let token = '';\n    this.http.post('/api/account/register', model).subscribe(response => {\n      token = response.token;\n    }, error => console.log(error));\n    return token;\n  }\n\n}\n\nAccountService.ɵfac = function AccountService_Factory(t) {\n  return new (t || AccountService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nAccountService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AccountService,\n  factory: AccountService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["E:/Programming/projects/Dating App/WebUI/src/app/_services/account.service.ts"],"names":["i0","i1","AccountService","constructor","http","token","login","loginCred","post","subscribe","response","error","console","log","register","model","ɵfac","AccountService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","factory","providedIn"],"mappings":";AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,OAAO,MAAMC,cAAN,CAAqB;AACxBC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKC,KAAL,GAAa,EAAb;AACH;;AACKC,EAAAA,KAAK,CAACC,SAAD,EAAY;AAAA;;AAAA;AACnB,MAAA,KAAI,CAACH,IAAL,CAAUI,IAAV,CAAe,oBAAf,EAAqCD,SAArC,EAAgDE,SAAhD,CAA0DC,QAAQ,IAAI;AAAE,QAAA,KAAI,CAACL,KAAL,GAAaK,QAAQ,CAACL,KAAtB;AAA8B,OAAtG,EAAwGM,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAjH;;AACA,aAAO,KAAI,CAACN,KAAZ;AAFmB;AAGtB;;AACDS,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AACZ,QAAIV,KAAK,GAAG,EAAZ;AACA,SAAKD,IAAL,CAAUI,IAAV,CAAe,uBAAf,EAAwCO,KAAxC,EAA+CN,SAA/C,CAAyDC,QAAQ,IAAI;AAAEL,MAAAA,KAAK,GAAGK,QAAQ,CAACL,KAAjB;AAAyB,KAAhG,EAAkGM,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAA3G;AACA,WAAON,KAAP;AACH;;AAbuB;;AAe5BH,cAAc,CAACc,IAAf,GAAsB,SAASC,sBAAT,CAAgCC,CAAhC,EAAmC;AAAE,SAAO,KAAKA,CAAC,IAAIhB,cAAV,EAA0BF,EAAE,CAACmB,QAAH,CAAYlB,EAAE,CAACmB,UAAf,CAA1B,CAAP;AAA+D,CAA1H;;AACAlB,cAAc,CAACmB,KAAf,GAAuB,aAAcrB,EAAE,CAACsB,kBAAH,CAAsB;AAAEjB,EAAAA,KAAK,EAAEH,cAAT;AAAyBqB,EAAAA,OAAO,EAAErB,cAAc,CAACc,IAAjD;AAAuDQ,EAAAA,UAAU,EAAE;AAAnE,CAAtB,CAArC","sourcesContent":["import * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nexport class AccountService {\r\n    constructor(http) {\r\n        this.http = http;\r\n        this.token = '';\r\n    }\r\n    async login(loginCred) {\r\n        this.http.post('/api/account/login', loginCred).subscribe(response => { this.token = response.token; }, error => console.log(error));\r\n        return this.token;\r\n    }\r\n    register(model) {\r\n        let token = '';\r\n        this.http.post('/api/account/register', model).subscribe(response => { token = response.token; }, error => console.log(error));\r\n        return token;\r\n    }\r\n}\r\nAccountService.ɵfac = function AccountService_Factory(t) { return new (t || AccountService)(i0.ɵɵinject(i1.HttpClient)); };\r\nAccountService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: AccountService, factory: AccountService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}