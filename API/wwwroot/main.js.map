{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/_directives/has-role.directive.ts","./src/app/_guards/admin.guard.ts","./src/app/_guards/auth.guard.ts","./src/app/_guards/prevent-unsaved-changes.guard.ts","./src/app/_interceptors/error.interceptor.ts","./src/app/_interceptors/jwt.interceptor.ts","./src/app/_interceptors/loading.interceptor.ts","./src/app/_models/userParams.ts","./src/app/_modules/shared.module.ts","./src/app/_resolvers/user-detailed.resolver.ts","./src/app/_services/account.service.ts","./src/app/_services/admin.service.ts","./src/app/_services/busy.service.ts","./src/app/_services/message.service.ts","./src/app/_services/presence.service.ts","./src/app/_services/user.service.ts","./src/app/admin/admin-panel/admin-panel.component.ts","./src/app/admin/admin-panel/admin-panel.component.html","./src/app/admin/photo-management/photo-management.component.ts","./src/app/admin/photo-management/photo-management.component.html","./src/app/admin/role-edit-dialog/role-edit-dialog.component.ts","./src/app/admin/role-edit-dialog/role-edit-dialog.component.html","./src/app/admin/user-management/user-management.component.ts","./src/app/admin/user-management/user-management.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/errors/not-found/not-found.component.ts","./src/app/errors/not-found/not-found.component.html","./src/app/errors/server-error/server-error.component.ts","./src/app/errors/server-error/server-error.component.html","./src/app/errors/test-error/test-error.component.ts","./src/app/errors/test-error/test-error.component.html","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/lists/lists.component.ts","./src/app/lists/lists.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/messages/messages.component.ts","./src/app/messages/messages.component.html","./src/app/nav/nav.component.html","./src/app/nav/nav.component.ts","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/users/photo-editor/photo-editor.component.ts","./src/app/users/photo-editor/photo-editor.component.html","./src/app/users/user-card/user-card.component.ts","./src/app/users/user-card/user-card.component.html","./src/app/users/user-detail/user-detail.component.ts","./src/app/users/user-detail/user-detail.component.html","./src/app/users/user-edit/user-edit.component.ts","./src/app/users/user-edit/user-edit.component.html","./src/app/users/user-list/user-list.component.ts","./src/app/users/user-list/user-list.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Directive, Input, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { take } from 'rxjs';\nimport { LoginResponse } from '../_models/AccountModels';\nimport { AccountService } from '../_services/account.service';\n\n@Directive({\n  selector: '[appHasRole]' // *appHasRole\n})\nexport class HasRoleDirective implements OnInit {\n  @Input() appHasRole : string[] = [];\n  loginResponse: LoginResponse | null = null;\n  constructor(private viewContainerRef: ViewContainerRef,\n     private templateRef: TemplateRef<any>, private accountService:AccountService) { \n      this.accountService.currentUser$.pipe(take(1)).subscribe(\n        l => {\n          this.loginResponse = l;\n        }\n      );\n  }\n  ngOnInit(): void {\n    // clear the view\n    if(this.loginResponse === null || this.loginResponse.userData.roles === null){\n      this.viewContainerRef.clear();\n      return;\n    }\n    if(this.loginResponse?.userData){\n      let roles = this.loginResponse.userData.roles as string[];\n      if(roles.some(role => this.appHasRole.includes(role))){\n        this.viewContainerRef.createEmbeddedView(this.templateRef);\n      }\n      else {\n        this.viewContainerRef.clear();\n        return;\n      }\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { map, Observable, of } from 'rxjs';\nimport { LoginResponse } from '../_models/AccountModels';\nimport { AccountService } from '../_services/account.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n  constructor(private accountService: AccountService, private toastrService: ToastrService){\n\n  }\n  canActivate(): Observable<boolean> {\n    return this.accountService.currentUser$.pipe(\n      map(login  => {\n\n        if(login?.userData.roles.includes('admin') || login?.userData.roles.includes('moderator')){\n          return true;\n        }\n        this.toastrService.error(\"Unauthorized Access\");\n        return false;\n      })\n    );\n  }\n  \n}\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate} from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { map, Observable } from 'rxjs';\r\nimport { LoginResponse } from '../_models/AccountModels';\r\nimport { AccountService } from '../_services/account.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private accountService: AccountService, private toastr: ToastrService) {\r\n\r\n  }\r\n  canActivate(): Observable<boolean>{\r\n    return this.accountService.currentUser$.pipe(\r\n      map<LoginResponse | null, boolean>((response: LoginResponse | null) => {\r\n        if (response) {\r\n          return true;\r\n        }\r\n        else {\r\n          this.toastr.error(\"You need to login!\");\r\n          return false;\r\n        }\r\n      })\r\n    );\r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanDeactivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UserEditComponent } from '../users/user-edit/user-edit.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PreventUnsavedChangesGuard implements CanDeactivate<unknown> {\n  canDeactivate(component: UserEditComponent): boolean {\n    if (component.checkIfUserChanged()) {\n      return confirm('Are you sure you want to discard the unsaved changes?');\n    }\n    return true;\n  }\n  \n}\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { catchError, Observable, throwError } from 'rxjs';\r\nimport { NavigationExtras, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private router: Router, private toastr: ToastrService) {}\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n\r\n    return next.handle(request).pipe(\r\n      catchError((error) => {\r\n        if (error) {\r\n          switch (error.status) {\r\n            case 400:\r\n              if (error.error.errors) {\r\n                const modelStateErrors = [];\r\n                for (const key in error.error.errors) {\r\n                  modelStateErrors.push(error.error.errors[key]);\r\n                }\r\n                throw modelStateErrors.flat();\r\n              }\r\n              else if(typeof(error.error) === 'object'){\r\n                this.toastr.error(error.statusText, error.status);\r\n              }\r\n              else {\r\n                this.toastr.error(error.error, error.status);\r\n              }\r\n              break;\r\n            case 404:\r\n              this.router.navigateByUrl('not-found');\r\n              break;\r\n            case 401:\r\n              // this.toastr.error(error.statusText, error.status);\r\n              break;\r\n            case 500:\r\n              const navigationExtras: NavigationExtras = { state: { error: error.error } };\r\n              this.router.navigateByUrl('/server-error', navigationExtras);\r\n              break;\r\n            default:\r\n              this.toastr.error('something unexpected occured.');\r\n              break;\r\n          }\r\n        }\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable, take } from 'rxjs';\r\nimport { AccountService } from '../_services/account.service';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private accountService: AccountService) { }\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => {\r\n      if (user) {\r\n        request = request.clone({\r\n          setHeaders: {\r\n            Authorization: `Bearer ${user.token}`\r\n          }\r\n        });\r\n      }\r\n    });\r\n    return next.handle(request);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable, delay, finalize } from 'rxjs';\r\nimport { BusyService } from '../_services/busy.service';\r\n\r\n@Injectable()\r\nexport class LoadingInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private busyService: BusyService) {}\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    this.busyService.busy();\r\n    return next.handle(request).pipe(\r\n      delay(1000),\r\n      finalize(() => this.busyService.idle())\r\n    );\r\n  }\r\n}\r\n","import { User } from \"./User\";\r\n\r\nexport class UserParams{\r\n    minAge :  number = 18;\r\n    maxAge : null | number = null;\r\n    pageNumber : number = 1;\r\n    itemsPerPage: number = 4;\r\n    orderBy: string = 'lastActive'; // options lastActive, age, creationTime\r\n    sex: string;\r\n    constructor( user: User){\r\n        this.sex = user.interest;\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs'\r\nimport { FileUploadModule } from 'ng2-file-upload';\r\nimport {BsDatepickerModule} from 'ngx-bootstrap/datepicker';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TimeagoModule } from 'ngx-timeago';\r\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule, BsDropdownModule.forRoot(),\r\n    ToastrModule.forRoot({ positionClass: 'toast-bottom-right' }),\r\n    TabsModule.forRoot(), FileUploadModule, BsDatepickerModule.forRoot(),\r\n    PaginationModule.forRoot(), TimeagoModule.forRoot(), ButtonsModule.forRoot(),\r\n    MatTabsModule, MatButtonModule, \r\n    MatFormFieldModule, MatIconModule, MatGridListModule, MatInputModule,\r\n    MatCardModule, MatSelectModule, MatDatepickerModule, MatNativeDateModule,\r\n    MatProgressBarModule, MatTableModule, MatMenuModule, MatDialogModule,\r\n    MatCheckboxModule, MatPaginatorModule, MatToolbarModule, MatSidenavModule,\r\n    MatProgressSpinnerModule\r\n  ],\r\n  exports: [\r\n    BsDropdownModule,\r\n    ToastrModule,\r\n    TabsModule,\r\n    FileUploadModule,\r\n    BsDatepickerModule,\r\n    PaginationModule,\r\n    TimeagoModule,\r\n    ButtonsModule,\r\n    MatTabsModule, \r\n    MatButtonModule,\r\n    MatFormFieldModule,\r\n    MatIconModule,\r\n    MatGridListModule,\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatSelectModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatProgressBarModule,\r\n    MatTableModule,\r\n    MatMenuModule,\r\n    MatDialogModule,\r\n    MatCheckboxModule,\r\n    MatPaginatorModule,\r\n    MatToolbarModule,\r\n    MatSidenavModule,\r\n    MatProgressSpinnerModule\r\n    ]\r\n})\r\nexport class SharedModule { }\r\n","import { Injectable } from '@angular/core';\nimport {\n  Resolve,\n  ActivatedRouteSnapshot\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { User } from '../_models/User';\nimport { UserService } from '../_services/user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserDetailedResolver implements Resolve<User> {\n  constructor(private userService: UserService){\n\n  }\n  resolve(route: ActivatedRouteSnapshot): Observable<User> {\n    return this.userService.getUserByUsername(route.paramMap.get(\"username\") as string);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map, Observable, ReplaySubject } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { LoginModel, LoginResponse, RegisterModel } from '../_models/AccountModels';\r\nimport { PresenceService } from './presence.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AccountService {\r\n  baseUrl = environment.apiUrl;\r\n  constructor(private http: HttpClient, private presenceService: PresenceService) { }\r\n  private currentUserSource = new ReplaySubject<LoginResponse | null>(1);\r\n  public currentUser$: Observable<LoginResponse | null> = this.currentUserSource.asObservable();\r\n\r\n  login(loginCred: LoginModel): Observable<LoginResponse> {\r\n    return this.http.post<LoginResponse>(this.baseUrl +'account/login', loginCred).pipe<LoginResponse>(\r\n      map<LoginResponse, LoginResponse>((response: LoginResponse) => {\r\n        const loginResponse: LoginResponse = response;\r\n        if (loginResponse) {\r\n          this. setCurrentUser(loginResponse);\r\n          this.presenceService.createHubConnection(response);\r\n        }\r\n        return response;\r\n      })\r\n    );\r\n  }\r\n\r\n  setCurrentUser(loginResponse: LoginResponse): void {\r\n    loginResponse.userData.roles = [];\r\n    const roles = this.getDecodedToken(loginResponse.token).role;\r\n    Array.isArray(roles)? loginResponse.userData.roles = roles: loginResponse.userData.roles.push(roles);\r\n    localStorage.setItem('user', JSON.stringify(loginResponse));\r\n    this.currentUserSource.next(loginResponse);\r\n  }\r\n\r\n  logout(): void {\r\n    localStorage.removeItem('user');\r\n    this.presenceService.stopHubConnection();\r\n    this.currentUserSource.next(null);\r\n  }\r\n  register(model: RegisterModel): Observable<LoginResponse> {\r\n    return this.http.post<LoginResponse>(this.baseUrl+ 'account/register', model).pipe<LoginResponse>(\r\n      map<LoginResponse, LoginResponse>((response: LoginResponse) => {\r\n        if (response) {\r\n          this. setCurrentUser(response);\r\n          this.presenceService.createHubConnection(response);\r\n\r\n        }\r\n        return response;\r\n      })\r\n    );\r\n  }\r\n  getDecodedToken(token: string){\r\n    return JSON.parse(atob(token.split('.')[1]))\r\n  }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map, of } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { RoleUser } from '../_models/roles';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n  baseUrl = environment.apiUrl;\n  cachedRoles: string[] = [];\n  constructor(private http: HttpClient) { }\n  getUsersWithRoles(){\n    return this.http.get<RoleUser[]>(this.baseUrl +\"roles/users-roles/all\");\n  }\n  getAllRoles(){\n    if(this.cachedRoles.length > 0){\n      return of(this.cachedRoles)\n    }\n    return this.http.get<string[]>(this.baseUrl + \"roles/all\").pipe(\n      map( r => \n      {\n        this.cachedRoles = r;\n        return r;\n      }));\n  }\n  addRoleToUser(username: string, role:string){\n    let obj = {'username': username, 'role': role};\n    return this.http.post<string>(this.baseUrl + 'roles/add', obj);\n  }\n  deleteRoleFromUser(username: string, role:string){\n    let obj = {'username': username, 'role': role};\n    return this.http.delete<string>(this.baseUrl + 'roles/removefrom', {body: obj});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BusyService {\n  public busyRequestCount: number = 0;\n  constructor(private spinnerService: NgxSpinnerService) { }\n  public busy() {\n    this.busyRequestCount++;\r\n    this.spinnerService.show();\r\n  }\n  public idle() {\n    this.busyRequestCount--;\r\n    if (this.busyRequestCount < 1) {\r\n      this.busyRequestCount = 0; // for safety just in case\r\n      this.spinnerService.hide();\r\n    }\r\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\nimport { BehaviorSubject, take } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { LoginResponse } from '../_models/AccountModels';\nimport { Message } from '../_models/message';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n  baseUrl = environment.apiUrl;\n  hubUrl = environment.hubUrl;\n  private hubConnection: HubConnection | null = null;\n  private messageThreadSource = new BehaviorSubject<Message[]>([]);\n  messageThread$ = this.messageThreadSource.asObservable();\n  constructor(private http: HttpClient) { }\n  async sendMessage(username: string, content: string){\n    return this.hubConnection?.invoke(\"SendMessages\", {\"recipientUsername\": username, \"content\": content})\n    .catch(e => console.log(e));\n  }\n  createHubConnection(user: LoginResponse, otherUserId: number){\n    this.hubConnection = new HubConnectionBuilder()\n    .withUrl(this.hubUrl + 'message?userId=' + otherUserId, \n    {\n      accessTokenFactory: () => user.token\n    })\n    .withAutomaticReconnect()\n    .build();\n    this.hubConnection.start().catch(e => console.log(e));\n    this.hubConnection.on(\"ReceiveMessages\", r => this.messageThreadSource.next(r));\n    this.hubConnection.on(\"NewMessage\", m => {\n      console.log(m);\n      this.messageThread$.pipe(take(1)).subscribe(msgs => {\n        this.messageThreadSource.next([...msgs, m]);\n      });\n    });\n  }\n  stopHubConnection(){\n    if(this.hubConnection){\n      this.hubConnection.stop();\n    } \n  }\n deleteMessage(msgId: number){\n   return this.http.delete(this.baseUrl +'Messages/' + msgId);\n }\n}\n\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\nimport { ToastrService } from 'ngx-toastr';\nimport { BehaviorSubject, take } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { LoginResponse } from '../_models/AccountModels';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PresenceService {\n  baseUrl = environment.hubUrl;\n  onlineUsersSource = new BehaviorSubject<string[]>([]);\n  onlineUsers$ = this.onlineUsersSource.asObservable();\n  private hubConnection: HubConnection | null = null;\n  constructor(private toastr: ToastrService, private router: Router) { }\n  createHubConnection(user: LoginResponse){\n    this.hubConnection = new HubConnectionBuilder()\n    .withUrl(this.baseUrl + 'presence', \n    {\n      accessTokenFactory: () => user.token\n    })\n    .withAutomaticReconnect()\n    .build();\n    this.hubConnection\n    .start()\n    .catch(e => {console.log(e)});\n    this.hubConnection.on(\"UserIsOnline\", username => {\n      this.onlineUsers$.pipe(take(1))\n      .subscribe(usernames => \n        {\n          this.onlineUsersSource.next([...usernames, username]);\n        });\n    });\n    this.hubConnection.on(\"UserIsOffline\", username => {\n      this.onlineUsers$.pipe(take(1))\n      .subscribe(usernames => \n        {\n          this.onlineUsersSource.next([...usernames.filter(u => u != username)]);\n        });\n    });\n    this.hubConnection.on(\"GetOnlineUsers\",\n     (usernames) =>\n      {\n        this.onlineUsersSource.next(usernames);\n      });\n      this.hubConnection.on(\"NewMessage\", \n      (userMsg) => {\n        console.log(userMsg);\n        this.toastr.info(userMsg.senderDTO.firstName + \": \" + userMsg.msgDTO.content)\n        .onTap\n        .pipe(take(1))\n        .subscribe(() => {\n          this.router.navigateByUrl(\"/messages\", {state: userMsg.senderDTO} );\n        });\n      });\n  }\n  stopHubConnection(){\n    this.hubConnection?.stop().catch(e => console.log(e));\n  }\n}\n","import { HttpClient, HttpParams, HttpResponse, JsonpClientBackend } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map, Observable, of, take } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { PaginatedResult, Pagination } from '../_models/pagination';\r\nimport { Photo, UpdateUser, User } from '../_models/User';\r\nimport { UserParams } from '../_models/userParams';\r\nimport { AccountService } from './account.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  baseUrl = environment.apiUrl;\r\n  constructor(private http: HttpClient, private accountService: AccountService) { \r\n\r\n    this.resetUserParams();\r\n  }\r\n  private users: User[] = []; //used for profile caching\r\n  private userParams : UserParams| null = null; //used for filter caching\r\n  private paginationInfo : Pagination = \r\n  { \r\n    currentPage: 0,\r\n    itemsPerPage: 0,\r\n    totalItems: 0,\r\n    totalPages: 0 \r\n  };\r\n  private userChache = new Map<string, User[]>();\r\n  public getUserParams(){\r\n    return this.userParams;\r\n  }\r\n  public setUserParams(params: UserParams){\r\n    this.userParams = params;\r\n  }\r\n  public resetUserParams(){\r\n    this.accountService.currentUser$.pipe(take(1)).subscribe(response  => {\r\n      if (response) {\r\n        this.userParams = new UserParams(response.userData);\r\n      }\r\n    });\r\n    return this.userParams;\r\n  }\r\n\r\n  // helper method\r\n  private getPaginationParams(userParams: UserParams){\r\n    let httpParams: HttpParams = new HttpParams()\r\n    .set('pageNumber',userParams.pageNumber)\r\n    .set('itemsPerPage', userParams.itemsPerPage)\r\n    .set('sex', userParams.sex)\r\n    .set('orderBy', userParams.orderBy);\r\n    if(userParams.minAge){\r\n      httpParams = httpParams.set('minAge', userParams.minAge);\r\n    }\r\n    if(userParams.maxAge){\r\n      httpParams = httpParams.set('maxAge', userParams.maxAge);\r\n    }\r\n    return httpParams;\r\n  }\r\n  public deleteCachedValues(){\r\n    this.userChache = new Map();\r\n    this.resetUserParams();\r\n  }\r\n  public getAllUsers(userParams: UserParams):Observable<PaginatedResult<User[]>> {\r\n    let paginatedResult : PaginatedResult<User[]> =  {result: [], pagination: this.paginationInfo};\r\n    let cache = this.userChache.get(Object.values(userParams).join('-'));\r\n    if(cache){\r\n      paginatedResult.result = cache;\r\n      return of(paginatedResult);\r\n    }\r\n\r\n    return this.http.get<User[]>(this.baseUrl + 'users/all', { observe: 'response', params: this.getPaginationParams(userParams)})\r\n     .pipe(\r\n      map(response => {\r\n        if(response?.body){\r\n          paginatedResult.result = response.body;\r\n        }\r\n        if(response.headers.get('Pagination')){\r\n          paginatedResult.pagination = JSON.parse(response.headers.get('Pagination') as string) as Pagination;\r\n        }\r\n        this.userChache.set(Object.values(userParams).join('-'), paginatedResult.result);\r\n        this.paginationInfo = paginatedResult.pagination;\r\n        return paginatedResult;\r\n      })\r\n    );\r\n  }\r\n  public getUserByUsername(username: string): Observable<User> {\r\n    const user = this.users.find(u => u.username === username);\r\n    if (user) {\r\n      return of(user);\r\n    }\r\n    return this.http.get<User>(this.baseUrl + 'users/info/username/' + username);\r\n  }\r\n  public reorderPhotos(photos: Photo[]){\r\n    return this.http.put<Photo[]>(this.baseUrl + 'users/photos/reorder', photos);\r\n  }\r\n  public deletePhoto(photoId:number){\r\n    return this.http.delete(this.baseUrl + 'users/photo/delete/' + String(photoId));\r\n  }\r\n  like(username: string): Observable<boolean>{\r\n    return this.http.post<boolean>(this.baseUrl + 'like/' + username, {}).pipe( map( r=> {\r\n      //the correct answer will need a more complex caching system so we will only delete all the cashed data for now\r\n      this.userChache = new Map();\r\n      return r;\r\n    }));\r\n  }\r\n  getLikes() : Observable<User[]>{\r\n    return this.http.get<User[]>(this.baseUrl + 'like/liked');\r\n\r\n  }\r\n  getIsLiked(username:string) : Observable<boolean>{\r\n    return this.http.get<boolean>(this.baseUrl + 'like/isliked/' + username);\r\n\r\n  }\r\n  getIsMatch(username:string): Observable<boolean>{\r\n    return this.http.get<boolean>(this.baseUrl + 'matches/ismatch/' + username);\r\n\r\n  }\r\n  getMatches(pageNumber : number = 1, itemsPerPage: number = 2): Observable<PaginatedResult<User[]>>{\r\n    let paginatedResult : PaginatedResult<User[]> =  {result: [], pagination: this.paginationInfo};\r\n    let httpParams: HttpParams = new HttpParams()\r\n    .set('pageNumber', pageNumber)\r\n    .set('itemsPerPage', itemsPerPage);\r\n    let cache = this.userChache.get(pageNumber + '-' + itemsPerPage);\r\n    if(cache){\r\n      paginatedResult.result = cache;\r\n      return of(paginatedResult);\r\n    }\r\n    return this.http.get<User[]>(this.baseUrl + 'matches', {observe:'response', params: httpParams})\r\n    .pipe(\r\n      map(response => {\r\n        if(response?.body){\r\n          paginatedResult.result = response.body;\r\n        }\r\n        if(response.headers.get('Pagination')){\r\n          paginatedResult.pagination = JSON.parse(response.headers.get('Pagination') as string) as Pagination;\r\n        }\r\n        this.userChache.set(pageNumber + '-' + itemsPerPage, paginatedResult.result);\r\n        this.paginationInfo = paginatedResult.pagination;\r\n        return paginatedResult;\r\n    }));\r\n\r\n  }\r\n  updateUser(user: User): Observable<UpdateUser> {\r\n    const userTosend: UpdateUser  = {\r\n      firstName: user.firstName,\r\n      lastName: user.lastName,\r\n      interest: user.interest,\r\n      bio: user.bio,\r\n      city: user.city,\r\n      country: user.country\r\n    };\r\n    return this.http.put<UpdateUser>(this.baseUrl + 'users/update', userTosend).pipe(map(\r\n      () => {\r\n        const index = this.users.indexOf(user);\r\n        this.users[index] = user;\r\n        return user;\r\n      }\r\n    ));\r\n  }\r\n  getPhotos(){\r\n    return this.http.get<Photo[]>(this.baseUrl + \"users/photos/all\");\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-panel',\n  templateUrl: './admin-panel.component.html',\n  styleUrls: ['./admin-panel.component.css']\n})\nexport class AdminPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>Management Panel</h1>\n<mat-tab-group mat-align-tabs=\"start\">\n    <mat-tab label=\"User Management\" *appHasRole=\"['admin']\">\n      <app-user-management></app-user-management>\n    </mat-tab>\n    <mat-tab label=\"Photo Management\">\n      <app-photo-management></app-photo-management>\n    </mat-tab>\n  </mat-tab-group>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-photo-management',\n  templateUrl: './photo-management.component.html',\n  styleUrls: ['./photo-management.component.css']\n})\nexport class PhotoManagementComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>photo-management not implemented yet!</p>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { RoleUser } from 'src/app/_models/roles';\nimport { AdminService } from 'src/app/_services/admin.service';\n\n@Component({\n  selector: 'app-role-edit-dialog',\n  templateUrl: './role-edit-dialog.component.html',\n  styleUrls: ['./role-edit-dialog.component.css']\n})\nexport class RoleEditDialogComponent implements OnInit {\n  roles: string[] = [];\n  rolesToAdd: string[] = [];\n  rolesToDelete: string[] = [];\n  rolesForm: {[role:string]: boolean} = {};\n  constructor( public dialogRef: MatDialogRef<RoleEditDialogComponent>,\n     @Inject(MAT_DIALOG_DATA) public data: RoleUser, private adminSerive:AdminService) { \n      adminSerive.getAllRoles().subscribe(r => this.roles = r);\n      for(let role of this.roles){\n        this.rolesForm[role] =  this.data.roles.includes(role);\n      }\n  }\n\n  ngOnInit(): void {\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  isRolesChanged(){\n    let role : any;\n    for(role in this.rolesForm){\n      if(this.rolesForm[role] === false){\n        if(this.data.roles.includes(role)){\n          return true;\n        }\n      }\n      else if(this.rolesForm[role] === true){\n        if(!this.data.roles.includes(role)){\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  private whichRoleChanged(){\n    let role : any;\n    for(role in this.rolesForm){\n\n      if(this.rolesForm[role] === false){\n        if(this.data.roles.includes(role)){\n          this.rolesToDelete.push(role);\n        }\n      }\n      else if(this.rolesForm[role] === true){\n        if(!this.data.roles.includes(role)){\n          this.rolesToAdd.push(role);\n        }\n      }\n    }\n    return false;\n  }\n  updateRoles(){\n    this.whichRoleChanged();\n    for(let role of this.rolesToAdd){\n      this.adminSerive.addRoleToUser(this.data.username, role).subscribe(r => {\n        this.data.roles.push(role);\n      });\n    }\n    for(let role of this.rolesToDelete){\n      this.adminSerive.deleteRoleFromUser(this.data.username, role).subscribe((r) => {\n        this.data.roles = this.data.roles.filter(r => r != role);\n      });\n    }\n    \n  }\n}\n","<h2 mat-dialog-title>{{data.username}}</h2>\n<mat-dialog-content class=\"mat-typography\">\n  <form #ngForm=\"ngForm\" class=\"row\">\n        <h3>Roles</h3>\n        <mat-checkbox *ngFor=\"let role of roles\" [name]=\"role\" [(ngModel)]=\"rolesForm[role]\">{{role}}</mat-checkbox>\n  </form>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n    <button mat-button (click)=\"onNoClick()\">Dismiss</button>\n    <button mat-button (click)=\"updateRoles()\" [mat-dialog-close]=\"data.roles\">Save</button>\n</mat-dialog-actions>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { RoleUser } from 'src/app/_models/roles';\nimport { AdminService } from 'src/app/_services/admin.service';\nimport { RoleEditDialogComponent } from '../role-edit-dialog/role-edit-dialog.component';\n\n@Component({\n  selector: 'app-user-management',\n  templateUrl: './user-management.component.html',\n  styleUrls: ['./user-management.component.css']\n})\nexport class UserManagementComponent implements OnInit {\n  usersRoles: RoleUser[] = [];\n  allRoles: string[] = [];\n  constructor(adminService: AdminService, public dialog: MatDialog) { \n    adminService.getUsersWithRoles().subscribe(\n      r => {\n        if(r){\n          this.usersRoles = r;\n        }\n      }\n    );\n    adminService.getAllRoles().subscribe(\n      r => {\n        if(r){\n          this.allRoles = r;\n        }\n      }\n    );\n  }\n  openDialog(roleUser: RoleUser){\n    const dialogRef = this.dialog.open(RoleEditDialogComponent, {data: roleUser});\n\n    dialogRef.afterClosed().subscribe(\n      result => { \n        if(result){\n          roleUser.roles = result;\n        }\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n\n","<div class=\"row mx-0\" >\n    <table *ngIf=\"usersRoles.length > 0\" mat-table [dataSource]=\"usersRoles\" class=\"mat-elevation-z8\">\n        <ng-container style=\"width: 10px;\"  matColumnDef=\"id\">\n            <th mat-header-cell *matHeaderCellDef> Id </th>\n            <td mat-cell *matCellDef=\"let item\">{{item.id}}</td>\n        </ng-container>\n        <ng-container matColumnDef=\"username\">\n          <th mat-header-cell *matHeaderCellDef> Username </th>\n          <td mat-cell *matCellDef=\"let item\">{{item.username}}</td>\n        </ng-container>\n        <ng-container matColumnDef=\"roles\">\n            <th mat-header-cell *matHeaderCellDef> Roles </th>\n            <td mat-cell *matCellDef=\"let item\">{{item.roles.join('/')}}</td>\n        </ng-container>\n          <ng-container matColumnDef=\"edit-buttons\">\n            <th mat-header-cell *matHeaderCellDef>\n            </th>\n            <td mat-cell *matCellDef=\"let item\"> \n                <button (click)=\"openDialog(item)\" mat-flat-button color=\"primary\"> \n                    <mat-icon>edit</mat-icon> Edit Roles\n                </button>\n            </td>\n        </ng-container>\n        <tr mat-header-row *matHeaderRowDef=\"['id', 'username', 'roles', 'edit-buttons']\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: ['id', 'username', 'roles', 'edit-buttons'];\"></tr>\n    </table>\n</div>\n","import { OnInit } from '@angular/core';\r\nimport { Component } from '@angular/core';\r\nimport { LoginResponse } from './_models/AccountModels';\r\nimport { AccountService } from './_services/account.service';\r\nimport { PresenceService } from './_services/presence.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  public title = 'Dating App';\r\n\r\n  //public users?: User[];\r\n\r\n  constructor(private accountService: AccountService, private presenceService: PresenceService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setCurrentUser();\r\n  }\r\n  setCurrentUser() {\r\n    let userString = localStorage.getItem('user');\r\n    if (userString != null) {\r\n      let user = JSON.parse(userString) as LoginResponse;\r\n      this.accountService.setCurrentUser(user);\r\n      this.presenceService.createHubConnection(user);\r\n    }\r\n  }\r\n}\r\n\r\n","<ngx-spinner bdColor=\"rgba(0, 0, 0, 0.8)\" size=\"medium\" color=\"#fff\" type=\"ball-spin\" [fullScreen]=\"true\"><p style=\"color: white\"> Loading... </p></ngx-spinner>\r\n<app-nav></app-nav>\r\n<div  class=\"mt-5 container\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n<!--<app-footer></app-footer>-->\r\n","import { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { NavComponent } from './nav/nav.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { UserListComponent } from './users/user-list/user-list.component';\r\nimport { UserDetailComponent } from './users/user-detail/user-detail.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { AuthGuard } from './_guards/auth.guard';\r\nimport { SharedModule } from './_modules/shared.module';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { TestErrorComponent } from './errors/test-error/test-error.component';\r\nimport { ErrorInterceptor } from './_interceptors/error.interceptor';\r\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\r\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\r\nimport { UserCardComponent } from './users/user-card/user-card.component';\r\nimport { JwtInterceptor } from './_interceptors/jwt.interceptor';\r\nimport { NgxGalleryModule } from '@kolkov/ngx-gallery';\r\nimport { UserEditComponent } from './users/user-edit/user-edit.component';\r\nimport { PreventUnsavedChangesGuard } from './_guards/prevent-unsaved-changes.guard';\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport { LoadingInterceptor } from './_interceptors/loading.interceptor';\r\nimport { PhotoEditorComponent } from './users/photo-editor/photo-editor.component';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { UserDetailedResolver } from './_resolvers/user-detailed.resolver';\r\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\r\nimport { AdminGuard } from './_guards/admin.guard';\r\nimport { HasRoleDirective } from './_directives/has-role.directive';\r\nimport { UserManagementComponent } from './admin/user-management/user-management.component';\r\nimport { PhotoManagementComponent } from './admin/photo-management/photo-management.component';\nimport { RoleEditDialogComponent } from './admin/role-edit-dialog/role-edit-dialog.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: 'home', component: HomeComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'users', component: UserListComponent, canActivate:[AuthGuard] },\r\n  { path: 'users/username/:username', component: UserDetailComponent, canActivate:[AuthGuard], resolve: {user: UserDetailedResolver} },\r\n  { path: 'lists', component: ListsComponent, canActivate:[AuthGuard] },\r\n  { path: 'messages', component: MessagesComponent, canActivate: [AuthGuard] },\r\n  { path: 'admin', component: AdminPanelComponent, canActivate: [AuthGuard, AdminGuard]},\r\n  { path: 'users/edit', component: UserEditComponent, canActivate: [AuthGuard], canDeactivate: [PreventUnsavedChangesGuard] },\r\n  /*{\r\n    path: '',\r\n    runGuardsAndResolvers: 'always',\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      { path: 'users', component: UserListComponent },\r\n      { path: 'users/username/:username', component: UserDetailComponent },\r\n      { path: 'lists', component: ListsComponent },\r\n      { path: 'messages', component: MessagesComponent }\r\n    ]\r\n  },*/\r\n  { path: 'errors', component: TestErrorComponent },\r\n  { path: 'not-found', component: NotFoundComponent },\r\n  { path: 'server-error', component: ServerErrorComponent },\r\n  { path: '', redirectTo:'/home', pathMatch:'full' },\r\n  { path: '**', redirectTo:'/not-found', pathMatch:'full' }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavComponent,\r\n    FooterComponent,\r\n    HomeComponent,\r\n    RegisterComponent,\r\n    UserListComponent,\r\n    UserDetailComponent,\r\n    ListsComponent,\r\n    MessagesComponent,\r\n    LoginComponent,\r\n    TestErrorComponent,\r\n    NotFoundComponent,\r\n    ServerErrorComponent,\r\n    UserCardComponent,\r\n    UserEditComponent,\r\n    PhotoEditorComponent,\r\n    AdminPanelComponent,\r\n    HasRoleDirective,\r\n    UserManagementComponent,\r\n    PhotoManagementComponent,\r\n    RoleEditDialogComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule, HttpClientModule, BrowserAnimationsModule, FormsModule, ReactiveFormsModule,\r\n    RouterModule.forRoot(routes),\r\n    SharedModule, HttpClientModule, NgxGalleryModule, NgxSpinnerModule, DragDropModule, FontAwesomeModule\r\n  ],\r\n  providers: [\r\n    {provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true},\r\n    {provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true},\r\n    {provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptor, multi: true}\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row justify-content-center\">\n  <div class=\"mt-5 col-6\" >\n    <img src=\"../../../assets/SVGs/NotFound.svg\" alt=\"404\" />\n    <h2 class=\"row justify-content-center mt-5\" >Oops!</h2>\n    <div class=\"text-center mt-2\" >\n      Sorry, the page you’re looking for doesn’t exist.\n      Go back to <a routerLink=\"/home\">Home</a>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-server-error',\r\n  templateUrl: './server-error.component.html',\r\n  styleUrls: ['./server-error.component.css']\r\n})\r\nexport class ServerErrorComponent implements OnInit {\r\n  public error: any;\r\n  constructor(private router: Router) {\r\n    const navigation = router.getCurrentNavigation();\r\n    this.error = navigation?.extras?.state?.error;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"main-error-page\">\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\"\r\n       xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n       width=\"auto\"\r\n       height=\"290\"\r\n       viewBox=\"0 0 470 290\">\r\n    <defs>\r\n      <path id=\"prefix__a\"\r\n            d=\"M221.677 31.582c-55.54 19.895-112.156 36.51-167.848 55.993C33.02 94.854 8.92 106.19 5.062 129.52c-2.513 15.198 5.634 31.108 17.898 38.96 5.99 3.835 13.34 6.531 16.472 13.261 4.87 10.459-3.88 22.449-13.113 28.531-9.236 6.083-20.5 10.905-24.704 21.695-1.121 2.876-1.61 5.944-1.615 9.05v.082c.006 4.547 1.05 9.169 2.674 13.386 10.06 26.125 39.391 37.567 65.477 36.17 26.086-1.398 50.827-12.414 76.417-18.085 43.668-9.678 88.389-3.63 133.098 2.418 45.256 6.122 90.501 12.244 134.63 2.054 13.65-3.153 27.4-8.086 37.944-17.999 11.883-11.174 18.63-28.03 19.648-45.048.069-1.15.106-2.31.112-3.477v-.557c-.067-15.128-5.551-31.08-17.856-37.794-7.833-4.274-17.195-4.1-25.7-1.775-5.43 1.485-10.766 3.811-16.368 3.85-5.601.04-11.763-3-13.386-8.812-1.707-6.11 2.182-12.416 6.642-16.586 9.073-8.477 21.203-12.714 29.44-22.137 7.927-9.07 11.265-22.586 8.575-34.734-2.692-12.149-11.326-22.552-22.189-26.73-14.224-5.471-29.105-.465-44.051 4.542-14.139 4.736-28.34 9.474-42.1 5.336-2.1-.63-4.312-1.606-5.418-3.643-1.08-1.989-.835-4.511-.214-6.719 3.468-12.355 16.938-20.22 17.528-33.12.322-7.01-3.504-13.572-8.325-18.26C327.188 4.247 316.599.782 305.483.782c-28.103 0-59.605 22.132-83.806 30.8z\" />\r\n      <path id=\"prefix__c\"\r\n            d=\"M39.89.625c-2.162 6.638-7.77 12.79-13.571 16.612-9.236 6.082-20.5 10.904-24.704 21.694C.494 41.807.005 44.875 0 47.98v.082c.006 4.547 1.05 9.17 2.674 13.386 10.06 26.126 39.391 37.568 65.477 36.17 26.086-1.397 50.827-12.414 76.417-18.085 43.668-9.678 88.389-3.629 133.098 2.419 45.256 6.122 90.501 12.244 134.63 2.054 13.65-3.154 27.4-8.086 37.944-18 11.883-11.174 18.63-28.03 19.648-45.048.069-1.15.106-2.31.112-3.477v-.557c-.025-5.484-.761-11.079-2.277-16.3H39.89z\" />\r\n      <path id=\"prefix__e\"\r\n            d=\"M.99 2.778v5.157c0 1.457 1.467 2.638 3.277 2.638s3.278-1.181 3.278-2.638V2.778c0-1.457-1.467-2.637-3.278-2.637C2.457.141.99 1.321.99 2.778z\" />\r\n      <path id=\"prefix__g\"\r\n            d=\"M.577 2.778v5.157c0 1.457 1.468 2.638 3.279 2.638 1.81 0 3.278-1.181 3.278-2.638V2.778c0-1.457-1.468-2.637-3.278-2.637S.576 1.321.576 2.778z\" />\r\n      <path id=\"prefix__i\"\r\n            d=\"M.39 2.037c0 1.08.88 1.956 1.966 1.956 1.087 0 1.968-.877 1.968-1.956 0-1.08-.88-1.956-1.968-1.956C1.27.081.39.957.39 2.037z\" />\r\n      <path id=\"prefix__k\"\r\n            d=\"M.39 2.466c0 1.08.88 1.956 1.966 1.956 1.087 0 1.968-.875 1.968-1.956 0-1.079-.88-1.954-1.968-1.954C1.27.512.39 1.387.39 2.466z\" />\r\n      <path id=\"prefix__m\"\r\n            d=\"M1.963.022C.893.022.026.898.026 1.977c0 1.08.867 1.956 1.937 1.956H16.45c1.068 0 1.935-.876 1.935-1.956 0-1.079-.867-1.955-1.935-1.955H1.963z\" />\r\n      <path id=\"prefix__o\"\r\n            d=\"M5.214 5.34c-.85 3.38 1.072 5.145 5.14 11.15L.464 55.893l44.419 11.492 9.888-39.401c6.384-3.286 8.919-3.909 9.77-7.295.793-3.159-1.093-6.383-4.206-7.189L12.294 1.071c-.48-.125-.962-.185-1.437-.185-2.598 0-4.972 1.783-5.643 4.453z\" />\r\n      <path id=\"prefix__q\"\r\n            d=\"M5 6.465c-1.055 4.052 1.213 6.332 4.666 11.2l-9.2 35.38 2.075.52 9.442-36.306c-3.886-5.53-5.717-7.165-4.909-10.276.758-2.91 3.791-4.675 6.762-3.933l45.868 11.453c2.971.742 4.772 3.714 4.015 6.624-.81 3.118-3.222 3.687-9.328 6.72L44.95 64.154l2.076.518 9.2-35.38c5.404-2.654 8.514-3.59 9.57-7.646 1.047-4.032-1.447-8.15-5.563-9.177L14.365 1.016c-.635-.159-1.273-.234-1.9-.234-3.44 0-6.58 2.274-7.465 5.683z\" />\r\n      <path id=\"prefix__s\"\r\n            d=\"M5.916.737C2.89.737.428 3.265.428 6.37c0 3.326 2.16 4.498 7.25 9.07v32.236h43.2V15.44c5.077-4.56 7.25-5.74 7.25-9.07 0-3.105-2.462-5.633-5.488-5.633H5.916z\" />\r\n      <path id=\"prefix__u\"\r\n            d=\"M7.721.63C3.638.63.314 4.073.314 8.3c0 4.249 2.667 5.935 7.065 9.878v30.697h2.058V17.21C4.476 12.72 2.375 11.562 2.375 8.3c0-3.05 2.398-5.535 5.346-5.535h45.511c2.949 0 5.347 2.484 5.347 5.534 0 3.269-2.108 4.422-7.062 8.911v31.665h2.06V18.178c4.389-3.939 7.061-5.626 7.061-9.879 0-4.227-3.32-7.668-7.406-7.668H7.722z\" />\r\n      <path id=\"prefix__w\"\r\n            d=\"M4.278.171C2.09.171.314 1.931.314 4.097v43c0 2.168 1.776 3.926 3.964 3.926H69.79c2.187 0 3.963-1.758 3.963-3.926v-43C73.753 1.93 71.977.17 69.79.17H4.278z\" />\r\n      <path id=\"prefix__y\"\r\n            d=\"M.102 2.593C-.017 3.898.95 5.053 2.26 5.177c1.308.122 2.469-.835 2.591-2.138C4.97 1.735 4.007.58 2.696.456 2.62.448 2.544.445 2.47.445 1.253.445.217 1.367.102 2.593z\" />\r\n      <path id=\"prefix__A\"\r\n            d=\"M.007 2.613c-.119 1.303.844 2.459 2.155 2.582 1.311.122 2.472-.834 2.593-2.138.12-1.304-.843-2.46-2.154-2.582-.077-.009-.153-.011-.227-.011-1.216 0-2.253.92-2.367 2.149z\" />\r\n      <path id=\"prefix__C\"\r\n            d=\"M.79 3.73c-.144.275.15.627.337.37C3.783.462 7.604.373 9.772 4.237c.244.43.852-.108.639-.557C9.353 1.496 7.533.36 5.676.36 3.852.36 1.994 1.456.79 3.73z\" />\r\n      <path id=\"prefix__E\"\r\n            d=\"M8.699 4.235L2.878 2.667c-.528-.144-1.074.182-1.219.725-.143.547.167 1.102.693 1.243l5.821 1.572-1.076 4.048-5.821-1.572c-.528-.141-1.073.183-1.217.729-.145.544.164 1.1.692 1.24l5.822 1.573-.9 3.377 7.313 1.973c4.037 1.088 8.21-1.407 9.32-5.573.753-2.832-.102-5.71-1.996-7.605-.893-.891-2.014-1.564-3.307-1.914L9.69.511 8.7 4.235z\" />\r\n      <path id=\"prefix__G\"\r\n            d=\"M1.203 6.693c-1.123 4.183 1.356 8.479 5.536 9.596l7.57 2.024 1.534-5.714 2.531-9.428-7.569-2.025C10.128.966 9.445.88 8.775.88c-3.462 0-6.632 2.31-7.572 5.814z\" />\r\n    </defs>\r\n    <g fill=\"none\" fill-rule=\"evenodd\">\r\n      <path fill=\"#FFF\" d=\"M0 0H1366V800H0z\" transform=\"translate(-448 -158)\" />\r\n      <g>\r\n        <g transform=\"translate(-448 -158) translate(448 157) translate(0 .61)\">\r\n          <mask id=\"prefix__b\" fill=\"#fff\">\r\n            <use xlink:href=\"#prefix__a\" />\r\n          </mask>\r\n          <path fill=\"#F6F6F7\"\r\n                d=\"M-5.995 296.763L475.995 296.763 475.995 -5.213 -5.995 -5.213z\"\r\n                mask=\"url(#prefix__b)\" />\r\n        </g>\r\n        <g transform=\"translate(-448 -158) translate(448 157) translate(0 193.645)\">\r\n          <mask id=\"prefix__d\" fill=\"#fff\">\r\n            <use xlink:href=\"#prefix__c\" />\r\n          </mask>\r\n          <path fill=\"#EDEDF0\"\r\n                d=\"M-20.194 115.101L487.354 115.101 487.354 36.101 -20.194 36.101z\"\r\n                mask=\"url(#prefix__d)\" />\r\n        </g>\r\n        <path class=\"fio-500\"\r\n              stroke=\"#2D3F5B\"\r\n              stroke-linecap=\"round\"\r\n              stroke-width=\"4\"\r\n              d=\"M42.92 106.015c1.69-.15 3.386-.39 5.08-.454 1.496-.056 3.045.109 4.354.832 2.559 1.415 3.61 4.459 6.173 5.892 3.477 1.945 7.237 2.323 11.14 2.395 4.592.085 9.185.091 13.777.069 9.192-.045 18.386-.2 27.579.004 1.455.032 2.97.052 4.292-.562 2.606-1.208 2.6-4.556-.086-5.63-1.088-.434-2.291-.441-3.463-.441l-32.929-.022c-2.27-.001-5.629.548-5.724 3.443-.215 6.553.078 15.199.713 21.722.17 1.76.492 3.722 1.92 4.769.896.657 2.057.81 3.166.904 6.696.573 13.43-.22 20.15-.185 6.721.034 13.7.992 19.326 4.657 10.875 7.087 11.581 26.256-1.336 31.914-6.591 2.887-14.242 2.35-21.267 2.257-7.79-.103-12.714.024-20.504-.132-1.647-.034-3.648-.288-4.304-1.797-.574-1.324.355-2.913 1.64-3.573 1.285-.663 2.802-.642 4.248-.603 32.437.865 62.03 4.399 94.49 2.362 15.62-.979 26.11-9.971 29.058-25.472 2.41-12.67-.035-28.363-10.01-37.409-1.853-1.68-3.952-3.08-6.24-4.098-9.326-4.147-21.037-3.107-28.714 3.924-3.952 3.619-6.283 8.75-7.291 14.006-1.948 10.149-2.077 21.397 1.549 31.197 4.503 12.17 15.295 17.937 27.852 19.106 22.936 2.138 46.167 2.247 68.908-1.419 6.817-1.1 14.77-3.416 19.496-8.795 11.362-12.935 9.584-40.905-1.435-53.582-9.245-10.635-26.641-9.576-36.17.345-4.034 4.198-6.308 9.85-7.244 15.591-2.07 12.71-.474 27.655 8.267 37.863 5.498 6.42 14.934 9.316 22.9 11.018 5.7 1.217 11.59 1.935 17.404 1.17 5.668-.749 11.264-3.322 17.003-1.433 3.896 1.282 7.194 5.378 6.09 9.328-1.146 4.102-6.015 5.773-10.238 6.335-17.139 2.28-34.126-2.651-51.125 1.61-3.002.753-5.983 1.835-8.431 3.728-2.449 1.894-4.32 4.697-4.543 7.785-.835 11.582 23.435 6.912 30.629 10.509\"\r\n              transform=\"translate(-448 -158) translate(448 157)\" />\r\n        <g transform=\"translate(-448 -158) translate(448 157) translate(389.862 231.813)\">\r\n          <mask id=\"prefix__n\" fill=\"#fff\">\r\n            <use xlink:href=\"#prefix__m\" />\r\n          </mask>\r\n          <path class=\"fio\"\r\n                fill=\"#4B4B62\"\r\n                d=\"M-5.969 9.929L24.38 9.929 24.38 -5.973 -5.969 -5.973z\"\r\n                mask=\"url(#prefix__n)\" />\r\n        </g>\r\n\r\n        <path class=\"fio\"\r\n              stroke=\"#2D3F5B\"\r\n              stroke-linecap=\"round\"\r\n              stroke-width=\"4\"\r\n              d=\"M332.999 253.51c-7.766-.244-14.938 4.491-22.688 4.744-2.34.077-4.8.01-6.847-1.128-2.662-1.483-3.966-4.531-3.511-7.501.564-3.683 3.808-5.906 6.02-8.612 3.643-4.453 2.47-9.05-2.76-11.169-5.66-2.293-11.803-3.685-17.833-4.585\"\r\n              transform=\"translate(-448 -158) translate(448 157)\" />\r\n\r\n        <g class=\"full-torradeira\">\r\n          <g transform=\"translate(-448 -158) translate(448 157) translate(332.51 262.987)\">\r\n            <mask id=\"prefix__f\" fill=\"#fff\">\r\n              <use xlink:href=\"#prefix__e\" />\r\n            </mask>\r\n            <path fill=\"#4B4B62\"\r\n                  d=\"M-5.006 16.566L13.541 16.566 13.541 -5.855 -5.006 -5.855z\"\r\n                  mask=\"url(#prefix__f)\" />\r\n          </g>\r\n          <g transform=\"translate(-448 -158) translate(448 157) translate(384.066 262.987)\">\r\n            <mask id=\"prefix__h\" fill=\"#fff\">\r\n              <use xlink:href=\"#prefix__g\" />\r\n            </mask>\r\n            <path fill=\"#4B4B62\"\r\n                  d=\"M-5.418 16.566L13.129 16.566 13.129 -5.855 -5.418 -5.855z\"\r\n                  mask=\"url(#prefix__h)\" />\r\n          </g>\r\n          <g transform=\"translate(-448 -158) translate(448 157) translate(396.056 247.4)\">\r\n            <mask id=\"prefix__j\" fill=\"#fff\">\r\n              <use xlink:href=\"#prefix__i\" />\r\n            </mask>\r\n            <path fill=\"#4B4B62\"\r\n                  d=\"M-5.605 9.989L10.318 9.989 10.318 -5.913 -5.605 -5.913z\"\r\n                  mask=\"url(#prefix__j)\" />\r\n          </g>\r\n          <g transform=\"translate(-448 -158) translate(448 157) translate(396.056 254.793)\">\r\n            <mask id=\"prefix__l\" fill=\"#fff\">\r\n              <use xlink:href=\"#prefix__k\" />\r\n            </mask>\r\n            <path fill=\"#4B4B62\"\r\n                  d=\"M-5.605 10.418L10.318 10.418 10.318 -5.483 -5.605 -5.483z\"\r\n                  mask=\"url(#prefix__l)\" />\r\n          </g>\r\n\r\n          <g class=\"pao-atras\">\r\n            <g transform=\"translate(-448 -158) translate(448 157) translate(340.903 169.665)\">\r\n              <mask id=\"prefix__p\" fill=\"#fff\">\r\n                <use xlink:href=\"#prefix__o\" />\r\n              </mask>\r\n              <path fill=\"#FFDA7F\"\r\n                    d=\"M-5.53 73.379L70.718 73.379 70.718 -5.109 -5.53 -5.109z\"\r\n                    mask=\"url(#prefix__p)\" />\r\n            </g>\r\n            <g transform=\"translate(-448 -158) translate(448 157) translate(340.903 168.466)\">\r\n              <mask id=\"prefix__r\" fill=\"#fff\">\r\n                <use xlink:href=\"#prefix__q\" />\r\n              </mask>\r\n              <path fill=\"#E6A95F\"\r\n                    d=\"M-5.53 70.667L72.03 70.667 72.03 -5.213 -5.53 -5.213z\"\r\n                    mask=\"url(#prefix__r)\" />\r\n            </g>\r\n          </g>\r\n\r\n          <g class=\"pao-frente\">\r\n            <g transform=\"translate(-448 -158) translate(448 157) translate(326.515 182.854)\">\r\n              <mask id=\"prefix__t\" fill=\"#fff\">\r\n                <use xlink:href=\"#prefix__s\" />\r\n              </mask>\r\n              <path fill=\"#FFDA7F\"\r\n                    d=\"M-5.568 53.67L64.123 53.67 64.123 -5.259 -5.568 -5.259z\"\r\n                    mask=\"url(#prefix__t)\" />\r\n            </g>\r\n            <g transform=\"translate(-448 -158) translate(448 157) translate(325.316 181.655)\">\r\n              <mask id=\"prefix__v\" fill=\"#fff\">\r\n                <use xlink:href=\"#prefix__u\" />\r\n              </mask>\r\n              <path fill=\"#E6A95F\"\r\n                    d=\"M-5.68 54.87L66.634 54.87 66.634 -5.363 -5.68 -5.363z\"\r\n                    mask=\"url(#prefix__v)\" />\r\n            </g>\r\n\r\n            <g transform=\"translate(-448 -158) translate(448 157) translate(344.301 197.242)\">\r\n              <mask id=\"prefix__z\" fill=\"#fff\">\r\n                <use xlink:href=\"#prefix__y\" />\r\n              </mask>\r\n              <path class=\"olho-esq\"\r\n                    fill=\"#633\"\r\n                    d=\"M-4.153 -6.995L12.298 -3.797 9.107 12.627 -7.346 9.429z\"\r\n                    mask=\"url(#prefix__z)\" />\r\n            </g>\r\n            <g transform=\"translate(-448 -158) translate(448 157) translate(361.087 197.242)\">\r\n              <mask id=\"prefix__B\" fill=\"#fff\">\r\n                <use xlink:href=\"#prefix__A\" />\r\n              </mask>\r\n              <path class=\"olho-dir\"\r\n                    fill=\"#633\"\r\n                    d=\"M-4.248 -6.976L12.203 -3.778 9.011 12.645 -7.441 9.448z\"\r\n                    mask=\"url(#prefix__B)\" />\r\n            </g>\r\n            <g transform=\"translate(-448 -158) translate(448 157) translate(350.495 206.834)\">\r\n              <mask id=\"prefix__D\" fill=\"#fff\">\r\n                <use xlink:href=\"#prefix__C\" />\r\n              </mask>\r\n              <path class=\"boca\"\r\n                    fill=\"#633\"\r\n                    d=\"M-3.14 -7.546L17.993 -3.438 14.8 12.985 -6.333 8.878z\"\r\n                    mask=\"url(#prefix__D)\" />\r\n            </g>\r\n          </g>\r\n          <g class=\"torradeira\"\r\n             transform=\"translate(-448 -158) translate(448 157) translate(325.316 218.624)\">\r\n            <mask id=\"prefix__x\" fill=\"#fff\">\r\n              <use xlink:href=\"#prefix__w\" />\r\n            </mask>\r\n            <path fill=\"#C81414\"\r\n                  d=\"M-5.68 57.017L79.748 57.017 79.748 -5.823 -5.68 -5.823z\"\r\n                  mask=\"url(#prefix__x)\" />\r\n          </g>\r\n        </g>\r\n        <g class=\"raios\"\r\n           stroke=\"#fdba55\"\r\n           stroke-linecap=\"round\"\r\n           stroke-width=\"1.8\">\r\n          <path d=\"M18.393 5.769L21.35 2.82M9.304 4.452L7.306.783M14.502 3.516L14.981.207M3.272 28.271L.229 31.133M12.317 29.853L14.208 33.577M7.095 30.637L6.52 33.93\"\r\n                transform=\"translate(-448 -158) translate(448 157) translate(260.571 203.237)\" />\r\n        </g>\r\n        <g transform=\"translate(-448 -158) translate(448 157) translate(272.561 215.226)\">\r\n          <mask id=\"prefix__F\" fill=\"#fff\">\r\n            <use xlink:href=\"#prefix__E\" />\r\n          </mask>\r\n          <path class=\"tomada\"\r\n                fill=\"#2D3F5B\"\r\n                d=\"M10.383 -14.007L34.351 9.962 12.875 31.438 -11.095 7.469z\"\r\n                mask=\"url(#prefix__F)\" />\r\n        </g>\r\n        <g transform=\"translate(-448 -158) translate(448 157) translate(246.184 208.033)\">\r\n          <mask id=\"prefix__H\" fill=\"#fff\">\r\n            <use xlink:href=\"#prefix__G\" />\r\n          </mask>\r\n          <path class=\"tomada\"\r\n                fill=\"#2D3F5B\"\r\n                d=\"M10.807 -12.875L32.391 8.709 10.793 30.309 -10.793 8.724z\"\r\n                mask=\"url(#prefix__H)\" />\r\n        </g>\r\n      </g>\r\n    </g>\r\n  </svg>\r\n\r\n  <h1 class=\"error-title\">\r\n    Woops! <br>Something went wrong :(\r\n  </h1>\r\n  <h2 class=\"error-subtitle\">\r\n    Have you tried turning it off and on again?\r\n  </h2>\r\n  <ng-container *ngIf=\"error\">\r\n    <h5 class=\"text-danger\">\r\n      Error: {{error.message}}\r\n    </h5>\r\n    <code class=\"mt-4\">\r\n      {{error.details}}\r\n    </code>\r\n  </ng-container>\r\n\r\n\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-test-error',\r\n  templateUrl: './test-error.component.html',\r\n  styleUrls: ['./test-error.component.css']\r\n})\r\nexport class TestErrorComponent implements OnInit {\r\n  validationErrors: string[] = [];\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  get404Error(): void {\r\n    this.http.get('/api/buggy/not-found').subscribe(\r\n      response => {\r\n        console.log(response);\r\n\r\n      },\r\n      error => {\r\n        console.log(error);\r\n\r\n      }\r\n    );\r\n  }\r\n  get400Error(): void {\r\n    this.http.get('/api/buggy/bad-request').subscribe(\r\n      response => {\r\n        console.log(response);\r\n      },\r\n      error => {\r\n        console.log(error);\r\n\r\n      }\r\n    );\r\n  }\r\n  get401Error(): void {\r\n    this.http.get('/api/buggy/auth').subscribe(\r\n      response => {\r\n        console.log(response);\r\n\r\n      },\r\n      error => {\r\n        console.log(error);\r\n\r\n      }\r\n    );\r\n  }\r\n  get500Error(): void {\r\n    this.http.get('/api/buggy/server-error').subscribe(\r\n      response => {\r\n        console.log(response);\r\n\r\n      },\r\n      error => {\r\n        console.log(error);\r\n\r\n      }\r\n    );\r\n  }\r\n  get400ValidationError(): void {\r\n    this.http.post('/api/account/register', {}).subscribe(\r\n      response => {\r\n        console.log(response);\r\n\r\n      },\r\n      error => {\r\n        console.log(error);\r\n        this.validationErrors = error;\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","<ng-container>\n\n  <button (click)=\"get404Error()\" class=\"btn btn-outline-secondary me-3\"> Test 404 Error</button>\n  <button (click)=\"get401Error()\" class=\"btn btn-outline-secondary me-3\"> Test 401 Error</button>\n  <button (click)=\"get400Error()\" class=\"btn btn-outline-secondary me-3\"> Test 400 Error</button>\n  <button (click)=\"get400ValidationError()\" class=\"btn btn-outline-secondary me-3\"> Test 400 Validation Error</button>\n  <button (click)=\"get500Error()\" class=\"btn btn-outline-secondary me-3\"> Test 500 Error</button>\n  <div class=\"row mt-4\" *ngIf=\"validationErrors.length > 0\">\n    <ul class=\"text-danger\">\n      <li *ngFor =\"let error of validationErrors\">\n        {{error}}\n      </li>\n    </ul>\n  </div>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","  <div class=\"container\">\r\n    <footer class=\"py-3 my-4\">\r\n      <ul class=\"nav justify-content-center border-bottom pb-3 mb-3\">\r\n        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-2 text-muted\">Home</a></li>\r\n        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-2 text-muted\">Features</a></li>\r\n        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-2 text-muted\">Pricing</a></li>\r\n        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-2 text-muted\">FAQs</a></li>\r\n        <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-2 text-muted\">About</a></li>\r\n      </ul>\r\n      <p class=\"text-center text-muted\">© 2021 Dating App, Inc</p>\r\n    </footer>\r\n  </div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AccountService } from '../_services/account.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  constructor(/*private accountService: AccountService, private router: Router*/) { }\r\n  ngOnInit(): void {\r\n    /*if (this.accountService.currentUser$) {\r\n      this.router.navigateByUrl('/users');\r\n    }*/\r\n  }\r\n  registerToggle() {\r\n  }\r\n}\r\n","<div class=\"container\">\n  <div style=\"text-align: center;\">\n    <div>\n      <h1>Find Your Match</h1>\n    </div>\n    <div class=\"mt-4\">\n      <p class=\"lead\">Sign up For Free...</p>\n    </div>\n    <div class=\"text-center mt-4\">\n      <button mat-raised-button color=\"primary\" routerLink=\"/register\">Create Your Account</button>\n    </div>\n  </div>\n  \n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { PaginatedResult, Pagination } from '../_models/pagination';\nimport { User } from '../_models/User';\nimport { UserService } from '../_services/user.service';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css']\n})\nexport class ListsComponent implements OnInit {\n  pagination : Pagination = {\n    itemsPerPage: 4,\n    currentPage: 1,\n    totalItems:0,\n    totalPages:0\n  } ;\n\n\n  matches: User[] = [];\n  constructor(private userService: UserService) { }\n\n  ngOnInit(): void {\n    this.loadMatches();\n  }\n  loadMatches(){\n    this.userService.getMatches(this.pagination.currentPage, this.pagination.itemsPerPage).subscribe(\n      r => {\n        this.matches = r.result;\n        this.pagination = r.pagination;\n      }\n    );\n  }\n  pageChanged($event: any){\n    if($event){\n      this.pagination.currentPage = $event.pageIndex + 1;\n      this.loadMatches();\n    }\n  }\n\n}\n","<div class=\"container mt-4\" *ngIf=\"matches.length > 0\">\n    <div class=\"row mt-4\">\n        <div class=\"col-3\" *ngFor=\"let user of matches\">\n            <app-user-card [isLiked]=\"true\" [user]=\"user\"></app-user-card>\n        </div>\n    </div>\n</div>\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination && pagination.totalPages > 1\">\n    <mat-paginator [length]=\"pagination.totalItems\"\n        [pageSize]=\"pagination.itemsPerPage\"\n        (page)=\"pageChanged($event)\"\n        aria-label=\"Select page\">\n    </mat-paginator>  \n  </div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { LoginModel } from '../_models/AccountModels';\r\nimport { AccountService } from '../_services/account.service';\r\nimport { UserService } from '../_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginValid = true;\r\n  constructor(public accountService: AccountService, private router: Router, private userService: UserService) { }\r\n  public loginCred: LoginModel = { email: '', password: '' };\r\n  ngOnInit(): void {\r\n  }\r\n  public login() {\r\n    this.accountService.login(this.loginCred).subscribe(\r\n      response => {\r\n        if (response) {\r\n          if(response.token){\r\n            this.router.navigateByUrl('/users');\r\n            this.userService.deleteCachedValues();\r\n          }\r\n        }\r\n      },\r\n       () => this.loginValid = false\r\n     );\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n  <mat-card>\r\n    <mat-card-content>\r\n      <form #loginForm=\"ngForm\" (ngSubmit)=\"login()\">\r\n        <h1>Sign In</h1>\r\n        <mat-form-field>\r\n          <input matInput placeholder=\"Email\" [(ngModel)]=\"loginCred.email\" name=\"email\" required>\r\n          <mat-error>\r\n            Please provide a valid email address\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field>\r\n          <input matInput type=\"password\" placeholder=\"Password\" [(ngModel)]=\"loginCred.password\" name=\"password\" required>\r\n          <mat-error>\r\n            Please provide a valid password\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-error class=\"my-1\" *ngIf=\"!loginValid\">\r\n          The username and password were not recognized\r\n        </mat-error>\r\n        <button mat-raised-button color=\"primary\" [disabled]=\"!loginForm.form.valid\">Login</button>\r\n      </form>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n","import { ChangeDetectionStrategy, Component, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { take } from 'rxjs';\nimport { LoginResponse } from '../_models/AccountModels';\nimport { Pagination } from '../_models/pagination';\nimport { User } from '../_models/User';\nimport { AccountService } from '../_services/account.service';\nimport { MessageService } from '../_services/message.service';\nimport { PresenceService } from '../_services/presence.service';\nimport { UserService } from '../_services/user.service';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit,OnDestroy {\n  mode = 'unread';\n  @Input () currentMatch?: User;\n  @ViewChild('sendForm') sendForm?: NgForm; \n  matchesPagination?: Pagination;\n  matches: User[] = [];\n  matchPageNumber = 1;\n  matchesPerPage = 10;\n  currentAccount: LoginResponse | null = null;\n  newMessage: string = \"\";\n  constructor(public messageService: MessageService, private userService: UserService,\n    accountService: AccountService, public presenceService: PresenceService) { \n    \n      accountService.currentUser$.pipe(take(1)).subscribe(\n      r => {\n        this.currentAccount = r;\n      }\n    );\n  }\n  public getLoacaleDateTime(d: Date) : Date{\n    var localDate  = new Date(d.toString() + 'Z');\n    return localDate;\n  }\n  ngOnInit(): void {\n    this.loadMatches();\n    if(history.state?.username){\n      this.currentMatch = history.state as User;\n    }\n    if(this.currentMatch){\n      this.loadChat(this.currentMatch);\n    }\n  }\n\n  matchPageChanged(e: any){\n    if(e && (e.pageIndex + 1) != this.matchPageNumber){\n      this.matchPageNumber = e.pageIndex + 1;\n      this.loadMatches();\n    }\n  }\n  loadMatches(){\n    this.userService.getMatches(this.matchPageNumber, this.matchesPerPage).subscribe(\n      r => {\n        if(r){\n          this.matches = r.result;\n          this.matchesPagination = r.pagination;\n        }\n      }\n    );\n  }\n  sendMessage(){\n    if(this.currentMatch){\n      this.messageService.sendMessage(this.currentMatch?.username, this.newMessage).then(\n        () => {}\n      );\n      this.newMessage = '';     \n    }\n  }\n  loadChat(user: User){\n    this.messageService.stopHubConnection();\n    if(this.currentAccount){\n      this.messageService.createHubConnection(this.currentAccount, user.id);\n      this.currentMatch = user;\n    }\n  }\n  ngOnDestroy(): void {\n    this.messageService.stopHubConnection();\n  }\n\n}\n","<div class=\"row clearfix\">\n    <div class=\"col-lg-12\">\n        <div class=\"card chat-app\">\n            <div id=\"plist\" class=\"people-list\">\n                <ul class=\"list-unstyled chat-list mb-0\">\n                    <li class=\"clearfix\" (click)=\"loadChat(match)\" *ngFor=\"let match of matches\">\n                        <img [src]=\"match.photos[0]?.url || './assets/Pictures/profile-placeholder.png'\" alt=\"avatar\">\n                        <div class=\"about\">\n                            <div class=\"name\">{{match.firstName}} {{match.lastName}}</div>\n                            <div class=\"status\" *ngIf=\"(presenceService.onlineUsers$ | async)?.includes(match.username)\"> <span class=\"online\"></span> Active now</div>\n                            <div class=\"status\" *ngIf=\"!(presenceService.onlineUsers$ | async)?.includes(match.username)\">{{getLoacaleDateTime(match.lastActive) | timeago}}</div>\n                        </div>\n                    </li>\n                </ul>\n                <div class=\"d-flex justify-content-center\" *ngIf=\"matchesPagination && matchesPagination.totalPages > 1\">\n                    <mat-paginator [length]=\"matchesPagination.totalItems\"\n                        [pageSize]=\"matchesPagination.itemsPerPage\"\n                        (page)=\"matchPageChanged($event)\"\n                        aria-label=\"Select page\">\n                    </mat-paginator>  \n                    </div>\n            </div>\n            <div class=\"chat\"  *ngIf=\"currentMatch\">\n                <div class=\"chat-header clearfix\">\n                    <div class=\"row\">\n                        <div class=\"col-1\">\n                            <img [src]=\"currentMatch.photos[0]?.url || './assets/Pictures/profile-placeholder.png'\" alt=\"avatar\">\n                        </div>\n                        <div class=\"col-2\">\n                            <h3 class=\"mb-0\">{{currentMatch.firstName}} {{currentMatch.lastName}}</h3>\n                            <small *ngIf=\"(presenceService.onlineUsers$ | async)?.includes(currentMatch.username)\"> <span class=\"online\"></span> Active now</small>\n                            <small *ngIf=\"!(presenceService.onlineUsers$ | async)?.includes(currentMatch.username)\">{{getLoacaleDateTime(currentMatch.lastActive) | timeago}}</small>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"chat-history\" *ngIf=\"(messageService.messageThread$ | async); let messages\">\n                    <div class=\"mt-4\" *ngIf=\"messages.length === 0\">\n                        <h4 class=\"text-center\">No messages yet, say hi in the message box below</h4>\n                    </div>\n                    <ul #scrollMe style=\"overflow-y: scroll; height: 500px;\"\n                        [scrollTop]=\"scrollMe.scrollHeight\"\n                    *ngIf=\"messages.length > 0\" class=\"m-b-0\">\n                        <li class=\"clearfix\" *ngFor=\"let message of messages\">\n                            <div *ngIf=\"message.senderId == currentMatch.id\" class=\"message my-message\">\n                                {{message.content}}\n                            </div>\n                            <div *ngIf=\"message.senderId != currentMatch.id\" class=\"message other-message float-right\">\n                                {{message.content}}\n                            </div>\n                        </li>\n                    </ul>\n                </div>\n                <form #sendForm=\"ngForm\" (ngSubmit)=\"sendMessage()\" class=\"chat-message clearfix\">\n                   <div class=\"row\" style=\"height: fit-content;\">\n                       <mat-form-field class=\"col-11\">\n                           <input matInput name=\"content\" [(ngModel)]=\"newMessage\" autocomplete=\"off\">                                    \n                        </mat-form-field>\n                        <button style=\"height: min-content;\" class=\"col-1\" mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"newMessage===''\">\n                            <mat-icon>send</mat-icon>\n                        </button>\n                   </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>","\r\n  <mat-toolbar style=\"height: fit-content; box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\" class=\"d-flex flex-row align-items-center p-2\"  color=\"primary\">\r\n    <div>\r\n      <button mat-button style=\"font-size: large;\" (click)=\"route()\">Dating App</button>\r\n    </div>\r\n    <div style=\"font-size: medium;\" class=\"me-auto\">\r\n      <ng-container *ngIf=\"accountService.currentUser$ | async\">\r\n          <button mat-flat-button color=\"primary\" routerLink=\"/users\" routerActiveLink=\"active\">Explore</button>\r\n          <button mat-flat-button color=\"primary\" routerLink=\"/lists\" routerActiveLink=\"active\">Matches</button>\r\n          <button mat-flat-button color=\"primary\" routerLink=\"/messages\" routerActiveLink=\"active\">Messages</button>\r\n          <button mat-flat-button color=\"primary\" *appHasRole='[\"admin\", \"moderator\"]' routerLink=\"/admin\" routerActiveLink=\"active\">Admin</button>\r\n      </ng-container>\r\n      <!-- <button mat-button routerLink=\"/errors\" routerActiveLink=\"active\">errors</button> -->\r\n    </div>\r\n    <div [matMenuTriggerFor]=\"menu\" class=\"d-flex pointer align-items-center\" *ngIf=\"(accountService.currentUser$ | async) as user\"> \r\n        <img class=\"nav-img-circle me-2\" src=\"{{user.userData.photos[0]?.url || './assets/Pictures/profile-placeholder.png'}}\" alt=\"{{user.userData.firstName}}\" >\r\n        <div style=\"font-size: medium;\" class=\"ms-1\">\r\n            {{user.userData.firstName}}\r\n            {{user.userData.lastName}}\r\n        </div>\r\n        <mat-icon>arrow_drop_down</mat-icon>\r\n    </div>\r\n    <mat-menu #menu=\"matMenu\">\r\n      <button mat-menu-item routerLink=\"users/edit\">\r\n      <mat-icon>edit</mat-icon> Edit Profile\r\n      </button>\r\n      <button mat-menu-item (click)=\"logout()\">\r\n        <mat-icon>logout</mat-icon> Logout\r\n      </button>\r\n    </mat-menu>\r\n    <button mat-button *ngIf=\"(accountService.currentUser$ | async) === null\" routerLink=\"/login\">\r\n      <mat-icon>login</mat-icon> Sign in\r\n    </button>\r\n  </mat-toolbar>\r\n\r\n<!-- <header class=\"mb-6\">\r\n  <nav class=\"navbar navbar-expand-md navbar-dark fixed-top\" style=\"background: #3f51b5;\">\r\n    <div class=\"container\">\r\n      <a class=\"navbar-brand\" (click)=\"route()\">Dating App</a>\r\n      <ul class=\"navbar-nav me-auto\">\r\n        <ng-container *ngIf=\"accountService.currentUser$ | async\">\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/users\" routerActiveLink=\"active\">Explore</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/lists\" routerActiveLink=\"active\">Matches</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/messages\" routerActiveLink=\"active\">Messages</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" *appHasRole='[\"admin\", \"moderator\"]' routerLink=\"/admin\" routerActiveLink=\"active\">Admin</a>\r\n          </li>\r\n        </ng-container>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/errors\" routerActiveLink=\"active\">errors</a>\r\n        </li>\r\n      </ul>\r\n      <div mat-icon-button [matMenuTriggerFor]=\"menu\" *ngIf=\"(accountService.currentUser$ | async) as user\" class=\"text-light dropdown-toggle\">\r\n        \r\n          <img class=\"nav-img-circle me-2\" src=\"{{user.userData.photos[0]?.url || './assets/Pictures/profile-placeholder.png'}}\" alt=\"{{user.userData.firstName}}\" >\r\n          {{user.userData.firstName}}\r\n          {{user.userData.lastName}}\r\n      </div>\r\n      <mat-menu #menu=\"matMenu\">\r\n        <button mat-menu-item routerLink=\"users/edit\">\r\n         <mat-icon>edit</mat-icon> Edit Profile\r\n        </button>\r\n        <button mat-menu-item (click)=\"logout()\">\r\n          <mat-icon>logout</mat-icon> Logout\r\n        </button>\r\n      </mat-menu>\r\n      <ng-container *ngIf=\"(accountService.currentUser$ | async) === null\">\r\n            <a mat-flat-button color=\"primary\" routerLink=\"/login\">Sign in</a>\r\n      </ng-container> \r\n    </div>\r\n  </nav>\r\n</header> -->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LoginResponse } from '../_models/AccountModels';\r\nimport { AccountService } from '../_services/account.service';\r\nimport { UserService } from '../_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.css']\r\n})\r\nexport class NavComponent implements OnInit {\r\n\r\n  constructor(private userService: UserService, public accountService: AccountService, private router: Router, private toastr: ToastrService) {\r\n  }\r\n  ngOnInit(): void {  }\r\n  logout(): void {\r\n    this.accountService.logout();\r\n    this.router.navigateByUrl('/home');\r\n  }\r\n  route(){\r\n    let userString = localStorage.getItem('user');\r\n    if(userString){\r\n      let user = JSON.parse(userString) as LoginResponse;\r\n      if(user.token){\r\n        this.router.navigateByUrl('/users');\r\n        return;\r\n      }\r\n    }\r\n    this.router.navigateByUrl('/home');\r\n  }\r\n}\r\n\r\n\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AccountService } from '../_services/account.service';\r\nimport { UserService } from '../_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  public registerForm: FormGroup = this.formBuilder.group({\r\n    username: ['', Validators.required],\r\n    firstName: ['', Validators.required],\r\n    lastName: ['', Validators.required],\r\n    dateOfBirth: ['', Validators.required],\r\n    country: ['', Validators.required],\r\n    city:['', Validators.required],\r\n    email: ['', Validators.required],\r\n    sex: ['', Validators.required],\r\n    interest: ['', Validators.required],\r\n    password: ['', [Validators.required, Validators.minLength(6)]],\r\n    confirmPassword: ['', [Validators.required, this.passwordConfirming]]\r\n  });\r\n  public maxDate:Date = new Date();\r\n  constructor(private accountService: AccountService, private toastr: ToastrService,\r\n     private formBuilder: FormBuilder, private router: Router, private userService: UserService) {\r\n    this.initializeForm();\r\n    this.maxDate.setFullYear(this.maxDate.getFullYear() - 18);\r\n  }\r\n  public initializeForm(){\r\n    this.registerForm.controls.password.valueChanges.subscribe((value) => \r\n    {\r\n      this.registerForm.controls.confirmPassword.updateValueAndValidity();\r\n    });\r\n  }\r\n  // custom validator of type ValidatorFn\r\n  public passwordConfirming(control: AbstractControl): { passwordMismatch: boolean } | null {\r\n    if(control){\r\n      if(control.value != control.parent?.get('password')?.value){\r\n        return {passwordMismatch: true};\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  public ngOnInit(): void {\r\n  }\r\n  public register(): void {\r\n    this.accountService.register(this.registerForm.value).subscribe(\r\n      response => {\r\n        if(response){\r\n          this.router.navigateByUrl('users');\r\n          this.userService.deleteCachedValues();\r\n        }\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n      \r\n       });\r\n  }\r\n  public countryList: string[] = [\r\n    \"Afghanistan\",\r\n    \"Albania\",\r\n    \"Algeria\",\r\n    \"American Samoa\",\r\n    \"Andorra\",\r\n    \"Angola\",\r\n    \"Anguilla\",\r\n    \"Antarctica\",\r\n    \"Antigua and Barbuda\",\r\n    \"Argentina\",\r\n    \"Armenia\",\r\n    \"Aruba\",\r\n    \"Australia\",\r\n    \"Austria\",\r\n    \"Azerbaijan\",\r\n    \"Bahamas (the)\",\r\n    \"Bahrain\",\r\n    \"Bangladesh\",\r\n    \"Barbados\",\r\n    \"Belarus\",\r\n    \"Belgium\",\r\n    \"Belize\",\r\n    \"Benin\",\r\n    \"Bermuda\",\r\n    \"Bhutan\",\r\n    \"Bolivia (Plurinational State of)\",\r\n    \"Bonaire, Sint Eustatius and Saba\",\r\n    \"Bosnia and Herzegovina\",\r\n    \"Botswana\",\r\n    \"Bouvet Island\",\r\n    \"Brazil\",\r\n    \"British Indian Ocean Territory (the)\",\r\n    \"Brunei Darussalam\",\r\n    \"Bulgaria\",\r\n    \"Burkina Faso\",\r\n    \"Burundi\",\r\n    \"Cabo Verde\",\r\n    \"Cambodia\",\r\n    \"Cameroon\",\r\n    \"Canada\",\r\n    \"Cayman Islands (the)\",\r\n    \"Central African Republic (the)\",\r\n    \"Chad\",\r\n    \"Chile\",\r\n    \"China\",\r\n    \"Christmas Island\",\r\n    \"Cocos (Keeling) Islands (the)\",\r\n    \"Colombia\",\r\n    \"Comoros (the)\",\r\n    \"Congo (the Democratic Republic of the)\",\r\n    \"Congo (the)\",\r\n    \"Cook Islands (the)\",\r\n    \"Costa Rica\",\r\n    \"Croatia\",\r\n    \"Cuba\",\r\n    \"Curaçao\",\r\n    \"Cyprus\",\r\n    \"Czechia\",\r\n    \"Côte d'Ivoire\",\r\n    \"Denmark\",\r\n    \"Djibouti\",\r\n    \"Dominica\",\r\n    \"Dominican Republic (the)\",\r\n    \"Ecuador\",\r\n    \"Egypt\",\r\n    \"El Salvador\",\r\n    \"Equatorial Guinea\",\r\n    \"Eritrea\",\r\n    \"Estonia\",\r\n    \"Eswatini\",\r\n    \"Ethiopia\",\r\n    \"Falkland Islands (the) [Malvinas]\",\r\n    \"Faroe Islands (the)\",\r\n    \"Fiji\",\r\n    \"Finland\",\r\n    \"France\",\r\n    \"French Guiana\",\r\n    \"French Polynesia\",\r\n    \"French Southern Territories (the)\",\r\n    \"Gabon\",\r\n    \"Gambia (the)\",\r\n    \"Georgia\",\r\n    \"Germany\",\r\n    \"Ghana\",\r\n    \"Gibraltar\",\r\n    \"Greece\",\r\n    \"Greenland\",\r\n    \"Grenada\",\r\n    \"Guadeloupe\",\r\n    \"Guam\",\r\n    \"Guatemala\",\r\n    \"Guernsey\",\r\n    \"Guinea\",\r\n    \"Guinea-Bissau\",\r\n    \"Guyana\",\r\n    \"Haiti\",\r\n    \"Heard Island and McDonald Islands\",\r\n    \"Holy See (the)\",\r\n    \"Honduras\",\r\n    \"Hong Kong\",\r\n    \"Hungary\",\r\n    \"Iceland\",\r\n    \"India\",\r\n    \"Indonesia\",\r\n    \"Iran (Islamic Republic of)\",\r\n    \"Iraq\",\r\n    \"Ireland\",\r\n    \"Isle of Man\",\r\n    \"Israel\",\r\n    \"Italy\",\r\n    \"Jamaica\",\r\n    \"Japan\",\r\n    \"Jersey\",\r\n    \"Jordan\",\r\n    \"Kazakhstan\",\r\n    \"Kenya\",\r\n    \"Kiribati\",\r\n    \"Korea (the Democratic People's Republic of)\",\r\n    \"Korea (the Republic of)\",\r\n    \"Kuwait\",\r\n    \"Kyrgyzstan\",\r\n    \"Lao People's Democratic Republic (the)\",\r\n    \"Latvia\",\r\n    \"Lebanon\",\r\n    \"Lesotho\",\r\n    \"Liberia\",\r\n    \"Libya\",\r\n    \"Liechtenstein\",\r\n    \"Lithuania\",\r\n    \"Luxembourg\",\r\n    \"Macao\",\r\n    \"Madagascar\",\r\n    \"Malawi\",\r\n    \"Malaysia\",\r\n    \"Maldives\",\r\n    \"Mali\",\r\n    \"Malta\",\r\n    \"Marshall Islands (the)\",\r\n    \"Martinique\",\r\n    \"Mauritania\",\r\n    \"Mauritius\",\r\n    \"Mayotte\",\r\n    \"Mexico\",\r\n    \"Micronesia (Federated States of)\",\r\n    \"Moldova (the Republic of)\",\r\n    \"Monaco\",\r\n    \"Mongolia\",\r\n    \"Montenegro\",\r\n    \"Montserrat\",\r\n    \"Morocco\",\r\n    \"Mozambique\",\r\n    \"Myanmar\",\r\n    \"Namibia\",\r\n    \"Nauru\",\r\n    \"Nepal\",\r\n    \"Netherlands (the)\",\r\n    \"New Caledonia\",\r\n    \"New Zealand\",\r\n    \"Nicaragua\",\r\n    \"Niger (the)\",\r\n    \"Nigeria\",\r\n    \"Niue\",\r\n    \"Norfolk Island\",\r\n    \"Northern Mariana Islands (the)\",\r\n    \"Norway\",\r\n    \"Oman\",\r\n    \"Pakistan\",\r\n    \"Palau\",\r\n    \"Palestine, State of\",\r\n    \"Panama\",\r\n    \"Papua New Guinea\",\r\n    \"Paraguay\",\r\n    \"Peru\",\r\n    \"Philippines (the)\",\r\n    \"Pitcairn\",\r\n    \"Poland\",\r\n    \"Portugal\",\r\n    \"Puerto Rico\",\r\n    \"Qatar\",\r\n    \"Republic of North Macedonia\",\r\n    \"Romania\",\r\n    \"Russian Federation (the)\",\r\n    \"Rwanda\",\r\n    \"Réunion\",\r\n    \"Saint Barthélemy\",\r\n    \"Saint Helena, Ascension and Tristan da Cunha\",\r\n    \"Saint Kitts and Nevis\",\r\n    \"Saint Lucia\",\r\n    \"Saint Martin (French part)\",\r\n    \"Saint Pierre and Miquelon\",\r\n    \"Saint Vincent and the Grenadines\",\r\n    \"Samoa\",\r\n    \"San Marino\",\r\n    \"Sao Tome and Principe\",\r\n    \"Saudi Arabia\",\r\n    \"Senegal\",\r\n    \"Serbia\",\r\n    \"Seychelles\",\r\n    \"Sierra Leone\",\r\n    \"Singapore\",\r\n    \"Sint Maarten (Dutch part)\",\r\n    \"Slovakia\",\r\n    \"Slovenia\",\r\n    \"Solomon Islands\",\r\n    \"Somalia\",\r\n    \"South Africa\",\r\n    \"South Georgia and the South Sandwich Islands\",\r\n    \"South Sudan\",\r\n    \"Spain\",\r\n    \"Sri Lanka\",\r\n    \"Sudan (the)\",\r\n    \"Suriname\",\r\n    \"Svalbard and Jan Mayen\",\r\n    \"Sweden\",\r\n    \"Switzerland\",\r\n    \"Syrian Arab Republic\",\r\n    \"Taiwan\",\r\n    \"Tajikistan\",\r\n    \"Tanzania, United Republic of\",\r\n    \"Thailand\",\r\n    \"Timor-Leste\",\r\n    \"Togo\",\r\n    \"Tokelau\",\r\n    \"Tonga\",\r\n    \"Trinidad and Tobago\",\r\n    \"Tunisia\",\r\n    \"Turkey\",\r\n    \"Turkmenistan\",\r\n    \"Turks and Caicos Islands (the)\",\r\n    \"Tuvalu\",\r\n    \"Uganda\",\r\n    \"Ukraine\",\r\n    \"United Arab Emirates (the)\",\r\n    \"United Kingdom of Great Britain and Northern Ireland (the)\",\r\n    \"United States Minor Outlying Islands (the)\",\r\n    \"United States of America (the)\",\r\n    \"Uruguay\",\r\n    \"Uzbekistan\",\r\n    \"Vanuatu\",\r\n    \"Venezuela (Bolivarian Republic of)\",\r\n    \"Viet Nam\",\r\n    \"Virgin Islands (British)\",\r\n    \"Virgin Islands (U.S.)\",\r\n    \"Wallis and Futuna\",\r\n    \"Western Sahara\",\r\n    \"Yemen\",\r\n    \"Zambia\",\r\n    \"Zimbabwe\",\r\n    \"Åland Islands\"\r\n  ];\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-5\">\r\n        <form [formGroup]=\"registerForm\" class=\"mt-4\" (ngSubmit)=\"registerForm.valid && register()\"\r\n              autocomplete=\"off\"\r\n              *ngIf=\"registerForm\"\r\n              >\r\n          <h2 class=\"text-center text-secondary\">Create your account</h2>\r\n          <hr />\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"col\" appearance=\"fill\">\r\n              <mat-label>First name</mat-label>\r\n              <input matInput formControlName=\"firstName\">\r\n              <mat-error>\r\n                Invalid First Name\r\n              </mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field class=\"col\" appearance=\"fill\">\r\n              <mat-label>Last Name</mat-label>\r\n              <input matInput formControlName=\"lastName\">\r\n              <mat-error>\r\n                Invalid Last Name\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"row\">\r\n            <mat-form-field appearance=\"fill\">\r\n              <mat-label> Username </mat-label>\r\n              <input matInput formControlName=\"username\">\r\n              <mat-error>\r\n                Invalid Username\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"row\">\r\n            <mat-form-field appearance=\"fill\">\r\n              <mat-label>Choose a date</mat-label>\r\n              <input matInput [max]=\"maxDate\" formControlName=\"dateOfBirth\" [matDatepicker]=\"picker\">\r\n              <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n              <mat-datepicker #picker></mat-datepicker>\r\n              <mat-error>\r\n                Invalid Date Of Birth\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"col\" appearance=\"fill\">\r\n              <mat-label>Sex</mat-label>\r\n              <mat-select formControlName=\"sex\">\r\n                <mat-option value=\"m\">Male</mat-option>\r\n                <mat-option value=\"f\">Female</mat-option>\r\n              </mat-select>\r\n              <mat-error>\r\n                Invalid Field\r\n              </mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col\" appearance=\"fill\">\r\n              <mat-label>Interested In</mat-label>\r\n              <mat-select formControlName=\"interest\">\r\n                <mat-option value=\"m\">Males</mat-option>\r\n                <mat-option value=\"f\">Females</mat-option>\r\n                <mat-option value=\"b\">Both</mat-option>\r\n              </mat-select>\r\n              <mat-error>\r\n                Invalid Field\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <mat-form-field class=\"col\" appearance=\"fill\">\r\n              <mat-label>Country</mat-label>\r\n              <mat-select formControlName=\"country\">\r\n                <mat-option *ngFor=\"let country of countryList\" value=\"{{country}}\">{{country}}</mat-option>\r\n              </mat-select>\r\n              <mat-error>\r\n                Invalid Country\r\n              </mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col\" appearance=\"fill\">\r\n              <mat-label>City</mat-label>\r\n              <input formControlName=\"city\" matInput placeholder=\"Ex. Cairo\">\r\n              <mat-error>\r\n                Invalid City\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"row\">\r\n            <mat-form-field appearance=\"fill\">\r\n              <mat-label> Email </mat-label>\r\n              <input matInput formControlName=\"email\">\r\n              <mat-error>\r\n                Invalid Email\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"row\">\r\n            <mat-form-field appearance=\"fill\">\r\n              <mat-label> Password </mat-label>\r\n              <input matInput formControlName=\"password\">\r\n              <mat-error>\r\n                Invalid Password\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <mat-form-field appearance=\"fill\">\r\n              <mat-label> Confirm password </mat-label>\r\n              <input matInput formControlName=\"confirmPassword\">\r\n              <mat-error>\r\n                Invalid field\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"mt-3\">\r\n            <span>\r\n              By clicking Sign up, you agree to our <a href=\"#\">Terms of Use</a> and our <a href=\"#\">Privacy Policy</a>.\r\n            </span>\r\n          </div>\r\n          \r\n          <div class=\"form-group text-center my-3\">\r\n            <button [disabled]=\"!registerForm.valid\" mat-raised-button color=\"primary\" type=\"submit\">Sign up</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FileUploader } from 'ng2-file-upload';\r\nimport { take } from 'rxjs';\r\nimport { LoginResponse } from 'src/app/_models/AccountModels';\r\nimport { Photo, User } from 'src/app/_models/User';\r\nimport {moveItemInArray} from '@angular/cdk/drag-drop';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\nimport { UserService } from 'src/app/_services/user.service';\r\nimport { environment } from 'src/environments/environment';\r\n@Component({\r\n  selector: 'app-photo-editor',\r\n  templateUrl: './photo-editor.component.html',\r\n  styleUrls: ['./photo-editor.component.css']\r\n})\r\nexport class PhotoEditorComponent implements OnInit {\r\n  @Input() user: User | undefined = undefined;  \r\n  baseUrl = environment.apiUrl;\r\n  account: LoginResponse|null = null; \r\n  isOrderChanged = false;\r\n  uploader: FileUploader = new FileUploader({});\r\n  hasBaseDropzoneOver = false;\r\n  constructor(private accountService: AccountService, private userService:UserService) {\r\n    accountService.currentUser$.pipe(take(1)).subscribe(acc => {\r\n      if(acc){\r\n        this.account = acc;\r\n      }\r\n    });\r\n  }\r\n  isOrderChangedFunc(): boolean{\r\n    let initialPhotos:Photo[] = this.account?.userData.photos as Photo[]; \r\n    for (let index = 0; index < initialPhotos.length; index++) {\r\n      if(this.user?.photos[index].id != initialPhotos[index].id){\r\n        return true;\r\n      }\r\n    }      \r\n    return false;\r\n  }\r\n  initializeUploader() {\r\n    this.uploader = new FileUploader({\r\n      url: this.baseUrl + 'users/photo/upload',\r\n      authToken: 'Bearer ' + this.account?.token,\r\n      isHTML5: true,\r\n      allowedFileType: ['image'],\r\n      removeAfterUpload: true,\r\n      autoUpload: false,\r\n      maxFileSize: 10 * 1024 * 1024\r\n    });\r\n    this.uploader.onAfterAddingFile = (file) => {\r\n      file.withCredentials = false;\r\n    }\r\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\r\n      if (response) {\r\n        const photo: Photo = JSON.parse(response);\r\n        this.user?.photos?.push(photo);\r\n        if(this.account){\r\n          this.user?.photos.forEach(p =>  this.account?.userData.photos.push(Object.assign({}, p)));\r\n          this.accountService.setCurrentUser(this.account);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  reorderPhotos(){\r\n    let counter = 0;\r\n    this.user?.photos.forEach(p => {\r\n      p.order = counter;\r\n      counter++;\r\n    });\r\n    if(this.user){\r\n      this.userService.reorderPhotos(this.user.photos).subscribe(\r\n        response => {\r\n          if(response && this.user && this.account){\r\n            this.account.userData.photos = [];\r\n            // copying to make sure that the account object \r\n            // is isolated from any other incoming unsaved changes\r\n            this.user.photos.forEach(p =>  this.account?.userData.photos.push(Object.assign({}, p)));\r\n            this.accountService.setCurrentUser(this.account);\r\n            this.isOrderChanged = false;\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }\r\n  deletePhoto(photoId:number){\r\n    this.userService.deletePhoto(photoId).subscribe(\r\n      () => {\r\n        if(this.account && this.user){\r\n          const index = this.user.photos.findIndex(p => p.id === photoId);\r\n          this.user.photos = this.user.photos.filter(p => p.id !== photoId);\r\n          // reassign the order values of the pictures after the deleted picture.\r\n          for(let i = index + 1; i < this.user.photos.length; i++){\r\n            this.user.photos[i].order--;\r\n          }\r\n          this.account.userData.photos = [];\r\n          // copying to make sure that the account object \r\n          // is isolated from any other incoming unsaved changes\r\n          this.user.photos.forEach(p =>  this.account?.userData.photos.push(Object.assign({}, p)));\r\n          this.accountService.setCurrentUser(this.account);\r\n        }\r\n      });\r\n  }\r\n  drop(event: any) {\r\n    moveItemInArray(this.user?.photos as Photo[], event.previousIndex, event.currentIndex);\r\n    this.isOrderChanged = this.isOrderChangedFunc();\r\n  }\r\n  fileOverBase(event: any){\r\n    this.hasBaseDropzoneOver = event;\r\n  }\r\n  ngOnInit(): void {\r\n    this.initializeUploader();\r\n  }\r\n\r\n}\r\n","<div cdkDropList cdkDropListOrientation=\"horizontal\" \r\n[cdkDropListData]=\"user.photos\"  class=\"mt-4 row drag-list justify-content-center mx-0\"\r\n *ngIf=\"user\" (cdkDropListDropped)=\"drop($event)\">\r\n    <div  [cdkDragData]=\"photo\" class=\"col-2 drag-box mt-2\" *ngFor=\"let photo of user.photos\" cdkDrag>\r\n        <div class=\"text-center\">\r\n            <img src=\"{{photo.url}}\" alt=\"{{photo.url}}\" class=\"img-thumbnail p-1\">\r\n            <button mat-icon-button color=\"warn\" (click)=\"deletePhoto(photo.id)\" *ngIf=\"photo.order != 0\">\r\n                <mat-icon>delete</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n   \r\n</div>\r\n<input #fileUpload style=\"display:none;\" id=\"inputFile\" type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple/>\r\n<div class=\"mt-2 d-grid justify-content-center\">\r\n    <div >\r\n        <button mat-raised-button color=\"primary\" class=\"me-2\" [disabled]=\"!isOrderChanged\"\r\n                (click)=\"reorderPhotos()\">\r\n            <mat-icon>save</mat-icon>\r\n            Save\r\n        </button>\r\n        <button mat-raised-button color=\"accent\" (click)=\"fileUpload.click()\"><mat-icon>add_photo_alternate</mat-icon>\r\n            Add Picture\r\n        </button>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"row mt-4 mx-0\" style=\"margin-bottom: 40px\" *ngIf=\"uploader?.queue?.length\">\r\n    <table *ngIf=\"uploader.options.isHTML5\" mat-table [dataSource]=\"uploader.queue\" class=\"mat-elevation-z8\">\r\n\r\n        <!--- Note that these columns can be defined in any order.\r\n              The actual rendered columns are set as a property on the row definition\" -->\r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"name\">\r\n          <th mat-header-cell *matHeaderCellDef> Name </th>\r\n          <td mat-cell *matCellDef=\"let item\"> {{ item?.file?.name}} </td>\r\n        </ng-container>\r\n        <!-- Size Column -->\r\n        <ng-container  matColumnDef=\"size\">\r\n            <th mat-header-cell *matHeaderCellDef> Size </th>\r\n            <td mat-cell *matCellDef=\"let item\">{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\r\n        </ng-container>\r\n        <!--determines the headers -->\r\n        <tr mat-header-row *matHeaderRowDef=\"['name', 'size']\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: ['name', 'size'];\"></tr>\r\n      </table>\r\n\r\n    <div class=\"mt-4\">\r\n        <div>\r\n            <mat-progress-bar *ngIf=\"uploader.isUploading\" mode=\"determinate\" [value]=\"uploader.progress\"></mat-progress-bar>\r\n        </div>\r\n        <div class=\"mt-4 d-grid justify-content-center\">\r\n            <div>\r\n                <button mat-raised-button color=\"primary\" type=\"button\" class=\"me-2\"\r\n                        (click)=\"uploader.uploadAll()\" [disabled]=\"!uploader.getNotUploadedItems().length\">\r\n                    <mat-icon>upload</mat-icon> Upload all\r\n                </button>\r\n            \r\n                <button type=\"button\" mat-raised-button color=\"accent\" class=\"me-2\"\r\n                        (click)=\"uploader.cancelAll()\" [disabled]=\"!uploader.isUploading\">\r\n                    <mat-icon>block</mat-icon> Cancel all\r\n                </button>\r\n                <button type=\"button\" mat-raised-button color=\"warn\"\r\n                        (click)=\"uploader.clearQueue()\" [disabled]=\"!uploader.queue.length\">\r\n                    <mat-icon>delete</mat-icon> Remove all\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { PresenceService } from 'src/app/_services/presence.service';\r\nimport { UserService } from 'src/app/_services/user.service';\r\nimport { User } from '../../_models/User';\r\n\r\n@Component({\r\n  selector: 'app-user-card',\r\n  templateUrl: './user-card.component.html',\r\n  styleUrls: ['./user-card.component.css']\r\n})\r\nexport class UserCardComponent implements OnInit {\r\n  @Input () isLiked = false;\r\n  @Output () liked = new EventEmitter();\r\n  @Input() user: User = {\r\n    id: 0,\r\n    username: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    sex: '',\r\n    interest: '',\r\n    age: 0,\r\n    created: new Date(),\r\n    lastActive: new Date(),\r\n    bio: '',\r\n    city: '',\r\n    country: '',\r\n    photos: [],\r\n    roles: []\r\n  };\r\n \r\n  constructor(private userService: UserService, private toastr: ToastrService, public presenceService: PresenceService) { }\r\n  ngOnInit(): void {\r\n  }\r\n  public getLoacaleDateTime(d: Date) : Date{\r\n    var localDate  = new Date(d.toString() + 'Z');\r\n    return localDate;\r\n  }\r\n  addLike(user: User){\r\n    this.userService.like(user.username).subscribe(\r\n      r => {\r\n          this.toastr.success('You have liked ' + user.firstName);\r\n          if(r == true){\r\n            this.toastr.success(\"You have a new match!\")\r\n          }\r\n          this.liked.emit();\r\n      }\r\n    );\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <mat-card-title>{{user.firstName}} {{user.lastName}}</mat-card-title>\r\n    <mat-card-subtitle *ngIf=\"(presenceService.onlineUsers$ | async)?.includes(user.username)\"> <span class=\"online\"></span> Active now</mat-card-subtitle>\r\n    <mat-card-subtitle *ngIf=\"!(presenceService.onlineUsers$ | async)?.includes(user.username)\">{{getLoacaleDateTime(user.lastActive) | timeago}}</mat-card-subtitle>\r\n  </mat-card-header>\r\n  <img mat-card-image src=\"{{user.photos[0]?.url || './assets/Pictures/profile-placeholder.png'}}\" alt=\"Profile picture\">\r\n  <mat-card-content>\r\n  </mat-card-content>\r\n  <mat-card-actions class=\"text-center\">\r\n    <button mat-button color=\"primary\" class=\"me-2\" routerLink=\"/users/username/{{user.username}}\">\r\n      <mat-icon>person</mat-icon>\r\n    </button>\r\n    <button mat-button color=\"accent\" *ngIf=\"!isLiked\" (click)=\"addLike(user)\" class=\"me-2\">\r\n      <mat-icon>favorite</mat-icon>\r\n    </button>\r\n    <button mat-button color=\"primary\" *ngIf=\"isLiked\" routerLink=\"/messages\" [state]=\"user\">\r\n      <mat-icon>chat</mat-icon>\r\n    </button>\r\n  </mat-card-actions>\r\n</mat-card>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { User } from '../../_models/User';\r\nimport { UserService } from '../../_services/user.service';\r\nimport { NgxGalleryOptions } from '@kolkov/ngx-gallery';\r\nimport { NgxGalleryImage } from '@kolkov/ngx-gallery';\r\nimport { NgxGalleryAnimation } from '@kolkov/ngx-gallery';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { PresenceService } from 'src/app/_services/presence.service';\r\n\r\n@Component({\r\n  selector: 'app-user-detail',\r\n  templateUrl: './user-detail.component.html',\r\n  styleUrls: ['./user-detail.component.css']\r\n})\r\nexport class UserDetailComponent implements OnInit {\r\n  user: User = {\r\n    id: 0,\r\n    username: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    sex: '',\r\n    interest: '',\r\n    age: 0,\r\n    created: new Date(),\r\n    lastActive: new Date(),\r\n    bio: '',\r\n    city: '',\r\n    country: '',\r\n    photos: [],\r\n    roles: []\r\n  };\r\n  isLiked : boolean = true;\r\n  isMatch: boolean = false;\r\n  galleryOptions: NgxGalleryOptions[] = [];\r\n  galleryImages: NgxGalleryImage[] = [];\r\n  constructor(private userService: UserService, private route: ActivatedRoute,\r\n     private toastr: ToastrService, public presenceService: PresenceService) {\r\n    this.galleryOptions = [\r\n      {\r\n        width: '500px',\r\n        height: '500px',\r\n        imagePercent: 100,\r\n        thumbnailsColumns: 4,\r\n        imageAnimation: NgxGalleryAnimation.Slide,\r\n        preview: false\r\n      }\r\n    ];\r\n  }\r\n  addLike(){\r\n    this.userService.like(this.user.username).subscribe(\r\n      r => {\r\n          this.isLiked = true;\r\n          this.toastr.success('You have liked ' + this.user.firstName);\r\n          if(r == true){\r\n            this.toastr.success(\"You have a new match!\")\r\n          }\r\n      }\r\n    );\r\n  }\r\n  public getLoacaleDateTime(d: Date) : Date{\r\n    var localDate  = new Date(d.toString() + 'Z');\r\n    return localDate;\r\n  }\r\n  ngOnInit(): void {\r\n    this.route.data.subscribe(\r\n      data => {\r\n        this.user = data.user;\r\n        this.setImages();\r\n        this.userService.getIsLiked(this.user.username).subscribe(r => {\r\n          this.isLiked = r;\r\n        });\r\n      this.userService.getIsMatch(this.user.username).subscribe(r => this.isMatch = r);\r\n      }\r\n    );\r\n  }\r\n  public formatInterest(interest: string): string {\r\n    if (interest === 'f') {\r\n      return 'Females'\r\n    }\r\n    else if (interest === 'm') {\r\n      return 'Males'\r\n    }\r\n    else {\r\n      return 'Both females and males'\r\n    }\r\n  }\r\n\r\n\r\n  public setImages() {\r\n    for (const photo of this.user.photos) {\r\n      this.galleryImages.push({\r\n        small: photo?.url,\r\n        medium: photo?.url,\r\n        big: photo?.url\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"row\" *ngIf=\"user.username\">\r\n  <mat-card class=\"col-4\">\r\n    <mat-card-header>\r\n      <mat-card-title>{{user.firstName}} {{user.lastName}}</mat-card-title>\r\n      <mat-card-subtitle *ngIf=\"(presenceService.onlineUsers$ | async)?.includes(user.username)\"> <span class=\"online\"></span> Active now</mat-card-subtitle>\r\n    <mat-card-subtitle *ngIf=\"!(presenceService.onlineUsers$ | async)?.includes(user.username)\">{{getLoacaleDateTime(user.lastActive) | timeago}}</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <img mat-card-image src=\"{{user.photos[0]?.url || './assets/Pictures/profile-placeholder.png'}}\" \r\n    alt=\"profile picture\">\r\n    <mat-card-content>\r\n        <div>\r\n          <strong>Location:</strong>\r\n          <p>{{user.city}}, {{user.country}}</p>\r\n        </div>\r\n        <div>\r\n          <strong>Age:</strong>\r\n          <p>{{user.age}}</p>\r\n        </div>\r\n        <div>\r\n          <strong>Member since:</strong>\r\n          <p>{{getLoacaleDateTime(user.created) | date}}</p>\r\n        </div>\r\n\r\n    </mat-card-content>\r\n    <mat-card-actions class=\"text-center\">\r\n      <button mat-button color=\"accent\" *ngIf=\"!isLiked\" (click)=\"addLike()\">\r\n        <mat-icon>favorite</mat-icon>  LIKE\r\n      </button>\r\n      <button mat-button color=\"primary\" *ngIf=\"isMatch\" routerLink=\"/messages\" [state]=\"user\">\r\n        <mat-icon>chat</mat-icon>\r\n        Chat\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n  <mat-tab-group mat-align-tabs=\"center\" class=\"ps-4 col-8\">\r\n    <mat-tab label=\"About\"> \r\n      <div class=\"mt-4\" *ngIf=\"user.bio\">\r\n      <h2>Bio</h2>\r\n      <p>{{user.bio}}</p>\r\n    </div>\r\n    <div class=\"mt-4\">\r\n      <h2>Interested in</h2>\r\n      <p>{{formatInterest(user.interest)}}</p>\r\n    </div></mat-tab>\r\n    <mat-tab label=\"Gallery\">\r\n      <ngx-gallery [options]=\"galleryOptions\" [images]=\"galleryImages\" class=\"ngx-gallery\"></ngx-gallery>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n</div>\r\n","import { Component, HostListener, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { take } from 'rxjs';\nimport { LoginResponse } from '../../_models/AccountModels';\nimport { User } from '../../_models/User';\nimport { AccountService } from '../../_services/account.service';\nimport { UserService } from '../../_services/user.service';\n\n@Component({\n  selector: 'app-user-edit',\n  templateUrl: './user-edit.component.html',\n  styleUrls: ['./user-edit.component.css']\n})\nexport class UserEditComponent implements OnInit {\n  public user: User | undefined;\n  public oldUser: User | undefined;\n  public account: LoginResponse | undefined;\n  @ViewChild('editForm') editForm?: NgForm;\n  @HostListener('window:beforeunload', ['$event']) unloadNotification($event: any) {\n    if (this.checkIfUserChanged()) {\n      $event.returnValue = true;\n    }\n  }\n  constructor(private toastr: ToastrService, private userService: UserService, private accountService: AccountService) {\n    this.accountService.currentUser$.pipe(take(1)).subscribe(account => {\n      if (account) {\n        this.account = account;\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.loadUser();\n  }\n  loadUser() {\n    if (this.account?.userData) {\n      this.userService.getUserByUsername(this.account?.userData.username).subscribe(user => {\n        this.user = user;\n        this.oldUser = Object.assign({}, this.user);\n      });\n    }\n  }\n  checkIfUserChanged(){\n    let prop : keyof User;\n    if(this.oldUser && this.user){\n      for(prop in this.oldUser){\n        if(this.oldUser[prop] !== this.user[prop]){\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  public getLoacaleDateTime(d: Date) : Date{\n    var localDate  = new Date(d.toString() + 'Z');\n    return localDate;\n  }\n  updateUser() {\n    if (this.user) {\n      this.userService.updateUser(this.user).subscribe(r => {\n        if (r && this.user) {\n          this.toastr.success('Profile updated successfully');\n          this.oldUser = Object.assign({}, this.user);\n          this.editForm?.reset(this.user);\n        }\n      });\n    }\n  }\n  public countryList: string[] = [\n    \"Afghanistan\",\n    \"Albania\",\n    \"Algeria\",\n    \"American Samoa\",\n    \"Andorra\",\n    \"Angola\",\n    \"Anguilla\",\n    \"Antarctica\",\n    \"Antigua and Barbuda\",\n    \"Argentina\",\n    \"Armenia\",\n    \"Aruba\",\n    \"Australia\",\n    \"Austria\",\n    \"Azerbaijan\",\n    \"Bahamas (the)\",\n    \"Bahrain\",\n    \"Bangladesh\",\n    \"Barbados\",\n    \"Belarus\",\n    \"Belgium\",\n    \"Belize\",\n    \"Benin\",\n    \"Bermuda\",\n    \"Bhutan\",\n    \"Bolivia (Plurinational State of)\",\n    \"Bonaire, Sint Eustatius and Saba\",\n    \"Bosnia and Herzegovina\",\n    \"Botswana\",\n    \"Bouvet Island\",\n    \"Brazil\",\n    \"British Indian Ocean Territory (the)\",\n    \"Brunei Darussalam\",\n    \"Bulgaria\",\n    \"Burkina Faso\",\n    \"Burundi\",\n    \"Cabo Verde\",\n    \"Cambodia\",\n    \"Cameroon\",\n    \"Canada\",\n    \"Cayman Islands (the)\",\n    \"Central African Republic (the)\",\n    \"Chad\",\n    \"Chile\",\n    \"China\",\n    \"Christmas Island\",\n    \"Cocos (Keeling) Islands (the)\",\n    \"Colombia\",\n    \"Comoros (the)\",\n    \"Congo (the Democratic Republic of the)\",\n    \"Congo (the)\",\n    \"Cook Islands (the)\",\n    \"Costa Rica\",\n    \"Croatia\",\n    \"Cuba\",\n    \"Curaçao\",\n    \"Cyprus\",\n    \"Czechia\",\n    \"Côte d'Ivoire\",\n    \"Denmark\",\n    \"Djibouti\",\n    \"Dominica\",\n    \"Dominican Republic (the)\",\n    \"Ecuador\",\n    \"Egypt\",\n    \"El Salvador\",\n    \"Equatorial Guinea\",\n    \"Eritrea\",\n    \"Estonia\",\n    \"Eswatini\",\n    \"Ethiopia\",\n    \"Falkland Islands (the) [Malvinas]\",\n    \"Faroe Islands (the)\",\n    \"Fiji\",\n    \"Finland\",\n    \"France\",\n    \"French Guiana\",\n    \"French Polynesia\",\n    \"French Southern Territories (the)\",\n    \"Gabon\",\n    \"Gambia (the)\",\n    \"Georgia\",\n    \"Germany\",\n    \"Ghana\",\n    \"Gibraltar\",\n    \"Greece\",\n    \"Greenland\",\n    \"Grenada\",\n    \"Guadeloupe\",\n    \"Guam\",\n    \"Guatemala\",\n    \"Guernsey\",\n    \"Guinea\",\n    \"Guinea-Bissau\",\n    \"Guyana\",\n    \"Haiti\",\n    \"Heard Island and McDonald Islands\",\n    \"Holy See (the)\",\n    \"Honduras\",\n    \"Hong Kong\",\n    \"Hungary\",\n    \"Iceland\",\n    \"India\",\n    \"Indonesia\",\n    \"Iran (Islamic Republic of)\",\n    \"Iraq\",\n    \"Ireland\",\n    \"Isle of Man\",\n    \"Israel\",\n    \"Italy\",\n    \"Jamaica\",\n    \"Japan\",\n    \"Jersey\",\n    \"Jordan\",\n    \"Kazakhstan\",\n    \"Kenya\",\n    \"Kiribati\",\n    \"Korea (the Democratic People's Republic of)\",\n    \"Korea (the Republic of)\",\n    \"Kuwait\",\n    \"Kyrgyzstan\",\n    \"Lao People's Democratic Republic (the)\",\n    \"Latvia\",\n    \"Lebanon\",\n    \"Lesotho\",\n    \"Liberia\",\n    \"Libya\",\n    \"Liechtenstein\",\n    \"Lithuania\",\n    \"Luxembourg\",\n    \"Macao\",\n    \"Madagascar\",\n    \"Malawi\",\n    \"Malaysia\",\n    \"Maldives\",\n    \"Mali\",\n    \"Malta\",\n    \"Marshall Islands (the)\",\n    \"Martinique\",\n    \"Mauritania\",\n    \"Mauritius\",\n    \"Mayotte\",\n    \"Mexico\",\n    \"Micronesia (Federated States of)\",\n    \"Moldova (the Republic of)\",\n    \"Monaco\",\n    \"Mongolia\",\n    \"Montenegro\",\n    \"Montserrat\",\n    \"Morocco\",\n    \"Mozambique\",\n    \"Myanmar\",\n    \"Namibia\",\n    \"Nauru\",\n    \"Nepal\",\n    \"Netherlands (the)\",\n    \"New Caledonia\",\n    \"New Zealand\",\n    \"Nicaragua\",\n    \"Niger (the)\",\n    \"Nigeria\",\n    \"Niue\",\n    \"Norfolk Island\",\n    \"Northern Mariana Islands (the)\",\n    \"Norway\",\n    \"Oman\",\n    \"Pakistan\",\n    \"Palau\",\n    \"Palestine, State of\",\n    \"Panama\",\n    \"Papua New Guinea\",\n    \"Paraguay\",\n    \"Peru\",\n    \"Philippines (the)\",\n    \"Pitcairn\",\n    \"Poland\",\n    \"Portugal\",\n    \"Puerto Rico\",\n    \"Qatar\",\n    \"Republic of North Macedonia\",\n    \"Romania\",\n    \"Russian Federation (the)\",\n    \"Rwanda\",\n    \"Réunion\",\n    \"Saint Barthélemy\",\n    \"Saint Helena, Ascension and Tristan da Cunha\",\n    \"Saint Kitts and Nevis\",\n    \"Saint Lucia\",\n    \"Saint Martin (French part)\",\n    \"Saint Pierre and Miquelon\",\n    \"Saint Vincent and the Grenadines\",\n    \"Samoa\",\n    \"San Marino\",\n    \"Sao Tome and Principe\",\n    \"Saudi Arabia\",\n    \"Senegal\",\n    \"Serbia\",\n    \"Seychelles\",\n    \"Sierra Leone\",\n    \"Singapore\",\n    \"Sint Maarten (Dutch part)\",\n    \"Slovakia\",\n    \"Slovenia\",\n    \"Solomon Islands\",\n    \"Somalia\",\n    \"South Africa\",\n    \"South Georgia and the South Sandwich Islands\",\n    \"South Sudan\",\n    \"Spain\",\n    \"Sri Lanka\",\n    \"Sudan (the)\",\n    \"Suriname\",\n    \"Svalbard and Jan Mayen\",\n    \"Sweden\",\n    \"Switzerland\",\n    \"Syrian Arab Republic\",\n    \"Taiwan\",\n    \"Tajikistan\",\n    \"Tanzania, United Republic of\",\n    \"Thailand\",\n    \"Timor-Leste\",\n    \"Togo\",\n    \"Tokelau\",\n    \"Tonga\",\n    \"Trinidad and Tobago\",\n    \"Tunisia\",\n    \"Turkey\",\n    \"Turkmenistan\",\n    \"Turks and Caicos Islands (the)\",\n    \"Tuvalu\",\n    \"Uganda\",\n    \"Ukraine\",\n    \"United Arab Emirates (the)\",\n    \"United Kingdom of Great Britain and Northern Ireland (the)\",\n    \"United States Minor Outlying Islands (the)\",\n    \"United States of America (the)\",\n    \"Uruguay\",\n    \"Uzbekistan\",\n    \"Vanuatu\",\n    \"Venezuela (Bolivarian Republic of)\",\n    \"Viet Nam\",\n    \"Virgin Islands (British)\",\n    \"Virgin Islands (U.S.)\",\n    \"Wallis and Futuna\",\n    \"Western Sahara\",\n    \"Yemen\",\n    \"Zambia\",\n    \"Zimbabwe\",\n    \"Åland Islands\"\n  ];\n}\n","<div class=\"row\" *ngIf=\"user\">\n  <mat-card class=\"col-4\">\n    <mat-card-header>\n      <mat-card-title>{{user.firstName}} {{user.lastName}}</mat-card-title>\n    </mat-card-header>\n    <img mat-card-image src=\"{{user.photos[0]?.url || './assets/Pictures/profile-placeholder.png'}}\" \n      alt=\"profile picture\">\n    <mat-card-content>\n        <div>\n          <strong>Location:</strong>\n          <p>{{user.city}}, {{user.country}}</p>\n        </div>\n        <div>\n          <strong>Age:</strong>\n          <p>{{user.age}}</p>\n        </div>\n        <div>\n          <strong>Member since:</strong>\n          <p>{{getLoacaleDateTime(user.created) | date}}</p>\n        </div>\n    </mat-card-content>\n  </mat-card>\n  <div class=\"col\">\n    <div class=\"alert alert-info\" *ngIf=\" checkIfUserChanged()\">\n      <strong>Information: </strong> You have made changes. Any unsaved changes will be lost.\n    </div>\n    <mat-tab-group class=\"p-2\" mat-align-tabs=\"center\">\n      <mat-tab label=\"About {{user.firstName}}\">\n        <form #editForm=\"ngForm\" id=\"editForm\" (ngSubmit)=\"updateUser()\" >\n          <div class=\"row mt-4 mx-0\">\n            <mat-form-field class=\"col\">\n              <mat-label>First name</mat-label>\n              <input matInput name=\"firstName\" [(ngModel)]=\"user.firstName\">\n            </mat-form-field>\n\n            <mat-form-field class=\"col\">\n              <mat-label>Last name</mat-label>\n              <input matInput [(ngModel)]=\"user.lastName\" name=\"lastName\">\n            </mat-form-field>\n          </div>\n          <div class=\"row mt-2 mx-0\">\n            <mat-form-field>\n              <mat-label>\n                Bio\n              </mat-label>\n              <textarea matInput name=\"bio\" [(ngModel)]=\"user.bio\"></textarea>   \n            </mat-form-field>\n          </div>\n          <div class=\"row mt-2 mx-0\">\n            <mat-form-field>\n              <mat-label>\n                Interested In\n              </mat-label>\n              <mat-select name=\"interest\" [(ngModel)]=\"user.interest\">\n                <mat-option value=\"m\"> Males </mat-option>\n                <mat-option value=\"f\"> Females</mat-option>\n                <mat-option value=\"b\"> Both </mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n          <div class=\"row mt-2 mx-0\">\n            <mat-form-field class=\"col\">\n              <mat-label> Country </mat-label>\n              <mat-select name=\"country\" [(ngModel)]=\"user.country\">\n                <mat-option *ngFor=\"let country of countryList\" [value]=\"country\">{{country}}</mat-option>\n              </mat-select>\n            </mat-form-field>\n\n            <mat-form-field class=\"col\">\n              <mat-label> City </mat-label>\n              <input matInput name=\"city\"\n              [(ngModel)]=\"user.city\">\n            </mat-form-field>\n          </div>\n          <div class=\"mt-5 d-grid justify-content-center\">\n            <button mat-flat-button color=\"primary\" [disabled]=\"!checkIfUserChanged()\" form=\"editForm\" type=\"submit\">Save Changes</button>\n          </div>\n        </form>\n      </mat-tab>\n        <mat-tab label=\"Edit Pictures\">\n          <app-photo-editor [user]=\"user\"></app-photo-editor>\n        </mat-tab>\n      </mat-tab-group>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { Pagination } from 'src/app/_models/pagination';\r\nimport { UserParams } from 'src/app/_models/userParams';\r\nimport { User } from '../../_models/User';\r\nimport { UserService } from '../../_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-member-list',\r\n  templateUrl: './user-list.component.html',\r\n  styleUrls: ['./user-list.component.css']\r\n})\r\nexport class UserListComponent implements OnInit {\r\n  users: User[] = [];\r\n  pagination : Pagination | null = null ;\r\n  userParams: UserParams | null = null;\r\n  genderList = [{value: 'm', display: 'Males'}, {value: 'f', display: 'Females'}, {value: 'b', display: 'Both'}];\r\n  orderByOptions = [{value: 'lastActive', display: 'Last Active'}, {value: 'creationTime', display: 'Newest Users'}, {value: 'age', display: 'Age'} ];\r\n  constructor(private userService: UserService) {\r\n   this.userParams = userService.getUserParams();\r\n  }\r\n  ngOnInit(): void {\r\n    this.loadUsers();\r\n  }\r\n  loadUsers(){\r\n    this.userService.setUserParams(this.userParams as UserParams);\r\n    this.userService.getAllUsers(this.userParams as UserParams).subscribe(\r\n      response => {\r\n        if(response){\r\n          this.users = response.result;\r\n          this.pagination = response.pagination;\r\n        }\r\n      }\r\n    );\r\n  }\r\n  resetFilters(){\r\n    this.userParams = this.userService.resetUserParams();\r\n    this.loadUsers();\r\n  }\r\n  pageChanged($event:any){\r\n    if($event){\r\n      if($event && this.userParams){\r\n        this.userParams.pageNumber = $event.pageIndex + 1;\r\n        this.userService.setUserParams(this.userParams);\r\n        this.loadUsers();\r\n      }\r\n    }\r\n  }\r\n  \r\n  \r\n\r\n}\r\n","<div class=\"container mt-3\">\r\n  <form *ngIf=\"userParams\" #form=\"ngForm\" class=\"\" (ngSubmit)=\"loadUsers()\">\r\n    <div class=\"row justify-content-center\">\r\n      <mat-form-field class=\"col-1\">\r\n        <mat-label>Age from</mat-label>\r\n        <input matInput type=\"number\" name=\"minAge\" [(ngModel)]=\"userParams.minAge\" min=\"18\">\r\n        <mat-error *ngIf=\"userParams.minAge < 18\">18 is the minimum</mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field class=\"col-1\">\r\n        <mat-label>Age to</mat-label>\r\n        <input matInput type=\"number\" name=\"maxAge\" [(ngModel)]=\"userParams.maxAge\" min=\"18\">\r\n        <mat-error *ngIf=\"userParams.maxAge && userParams.maxAge < 18\">18 is the minimum</mat-error>\r\n      </mat-form-field>\r\n\r\n\r\n      <mat-form-field class=\"col-2\">\r\n        <mat-label>Show</mat-label>\r\n        <mat-select name=\"sex\" [(ngModel)]=\"userParams.sex\">\r\n          <mat-option *ngFor=\"let gender of genderList\" [value]=\"gender.value\">{{gender.display}}</mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field class=\"col-2\">\r\n        <mat-label>Order By</mat-label>\r\n        <mat-select name=\"orderBy\" [(ngModel)]=\"userParams.orderBy\">\r\n          <mat-option *ngFor=\"let oreder of orderByOptions\" [value]=\"oreder.value\">{{oreder.display}}</mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"mt-4 row justify-content-center\">\r\n      <button mat-raised-button color=\"primary\" class=\"col-auto me-1\" type=\"submit\">Apply</button>\r\n      <button mat-raised-button color=\"accent\" (click)=\"resetFilters()\" class=\"col-auto\" type=\"submit\">Reset</button>\r\n    </div>\r\n  </form>\r\n</div>\r\n\r\n<div class=\"row mt-4\">\r\n  <div class=\"col-3\" *ngFor=\"let user of users\">\r\n    <app-user-card (liked)=\"loadUsers()\" [user]=\"user\"></app-user-card>\r\n  </div>\r\n  \r\n</div>\r\n<div class=\"d-flex justify-content-center\" *ngIf=\"userParams && pagination && pagination.totalPages > 1\">\r\n  <mat-paginator [length]=\"pagination.totalItems\"\r\n              [pageSize]=\"pagination.itemsPerPage\"\r\n              (page)=\"pageChanged($event)\"\r\n              aria-label=\"Select page\">\r\n  </mat-paginator>\r\n</div>","export const environment = {\n  production: false,\n  apiUrl: 'https://localhost:5001/api/',\n  hubUrl: 'https://localhost:5001/hubs/'\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["HubConnectionBuilder","BehaviorSubject","take","environment","MessageService","constructor","http","apiUrl","hubUrl","messageThreadSource","asObservable","sendMessage","username","content","hubConnection","_a","invoke","catch","e","console","log","createHubConnection","user","otherUserId","withUrl","accessTokenFactory","token","withAutomaticReconnect","build","start","on","r","next","m","messageThread$","pipe","subscribe","msgs","stopHubConnection","stop","deleteMessage","msgId","delete","baseUrl","i0","factory","providedIn","ctx_r7","ctx_r9","ctx_r1","ctx_r26","MessagesComponent","messageService","userService","accountService","presenceService","currentUser$","currentAccount","getLoacaleDateTime","d","localDate","Date","toString","ngOnInit","loadMatches","state","currentMatch","history","loadChat","matchPageChanged","pageIndex","matchPageNumber","getMatches","matchesPerPage","matches","result","matchesPagination","pagination","newMessage","then","id","ngOnDestroy","selectors","viewQuery","NavComponent","router","toastr","logout","navigateByUrl","route","userString","localStorage","getItem","JSON","parse","decls","vars","consts","template","ctx","EventEmitter","ctx_r4","UserCardComponent","firstName","lastName","sex","interest","age","created","lastActive","bio","city","country","photos","roles","addLike","like","success","liked","emit","inputs","isLiked","outputs","NgxGalleryAnimation","ctx_r6","ctx_r0","UserDetailComponent","galleryOptions","width","height","imagePercent","thumbnailsColumns","imageAnimation","Slide","preview","data","setImages","getIsLiked","getIsMatch","isMatch","formatInterest","photo","galleryImages","push","small","url","medium","big"],"sourceRoot":"webpack:///"}